<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Sam&#39;s AI Blog</title>
<link>https://sam.ucm.dev/blog/index.html</link>
<atom:link href="https://sam.ucm.dev/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>recording my AI studies</description>
<generator>quarto-1.2.280</generator>
<lastBuildDate>Tue, 07 Feb 2023 13:00:00 GMT</lastBuildDate>
<item>
  <title>My setup for AI work on my Linux PC</title>
  <dc:creator>Sam Watkins</dc:creator>
  <link>https://sam.ucm.dev/blog/posts/setup/setup.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>I am using my home PC, with Debian 12 “bookworm” (testing) and an NVIDIA GPU.</p>
<p>The following setup is <strong>not recommended</strong> unless you know what you’re doing with Linux, and probably not even then.</p>
<p>I decided not to use conda, virtualenv, or docker. Instead, I installed the necessary Python modules under <code>/usr/local</code> with <code>pip</code>. This way I can use my AI tools directly from the command line and other scripts, like any other tools.</p>
</section>
<section id="allow-myself-to-install-packages-to-usrlocal" class="level2">
<h2 class="anchored" data-anchor-id="allow-myself-to-install-packages-to-usrlocal">Allow myself to install packages to /usr/local</h2>
<p>It’s not safe to run <code>pip install -U</code> as root. It will merrily remove files from Debian-packaged Python modules under <code>/usr/lib</code>, and mess up the system. To avoid this, I changed permissions so that my regular user account can write to everything under <code>/usr/local</code> via the <code>staff</code> group. I do the same for <code>/opt</code> because I want to upgrade Rust from my own user ID also:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;">sudo</span> adduser <span class="va" style="color: #111111;">$USER</span> staff</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">sudo</span> chgrp <span class="at" style="color: #657422;">-R</span> staff /usr/local /opt</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">sudo</span> chmod <span class="at" style="color: #657422;">-R</span> g+w /usr/local /opt</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>adduser: The user `sam' is already a member of `staff'.</code></pre>
</div>
</div>
<p>This is somewhat of a security concern, but if a bad guy gets a local shell it’s pretty much game over anyway. To make it safer, I could have used a different non-root account.</p>
<p>In order to upgrade a pip package where the same package was also installed in <code>/usr/lib</code> by dpkg, I need to use <code>pip -I -U packagename</code>. The <code>-I</code> flag tells it to ignore installed packages, i.e.&nbsp;don’t try to remove them. I only do that as needed for individual packages, when a normal upgrade fails.</p>
<p>This setup might upset Debian-packaged programs that depend on older versions of the Python libraries that I’ve upgraded. I haven’t noticed any problems like that yet.</p>
<p>If you try to downgrade a package, and If multiple versions of a package are accidentally installed under /usr/local/lib/python3.10 at that same time, the sym</p>
</section>
<section id="enable-switching-the-system-python-version" class="level2">
<h2 class="anchored" data-anchor-id="enable-switching-the-system-python-version">Enable switching the system python version</h2>
<p>The default Python version for Debian “testing” at time of writing is Python 3.11, however we don’t have a stable release of pytorch for Python 3.11 yet:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;">python3.11</span> <span class="at" style="color: #657422;">-m</span> pip install torchvision</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ERROR: Could not find a version that satisfies the requirement torchvision (from versions: 0.1.6, 0.1.7, 0.1.8, 0.1.9, 0.2.0, 0.2.1, 0.2.2, 0.2.2.post2, 0.2.2.post3)
ERROR: No matching distribution found for torchvision
</code></pre>
</div>
<div class="cell-output cell-output-error">
<pre><code>: 1</code></pre>
</div>
</div>
<p>So let’s enable switching the system Python version back to 3.10, using <code>update-alternatives</code>.</p>
<p>First, note that we can undo this change later, if necessary, as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;">sudo</span> update-alternatives <span class="at" style="color: #657422;">--remove-all</span> python3</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;">sudo</span> update-alternatives <span class="at" style="color: #657422;">--remove-all</span> pydoc3</span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;">sudo</span> ln <span class="at" style="color: #657422;">-sf</span> python3.11 /usr/bin/python3</span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;">sudo</span> ln <span class="at" style="color: #657422;">-sf</span> pydoc3.11 /usr/bin/pydoc3</span></code></pre></div>
</div>
<p>We can set up alternatives for <code>python3</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="fu" style="color: #4758AB;">sudo</span> update-alternatives <span class="at" style="color: #657422;">--install</span> /usr/bin/python3 python3 /usr/bin/python3.11 11</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;">sudo</span> update-alternatives <span class="at" style="color: #657422;">--install</span> /usr/bin/python3 python3 /usr/bin/python3.10 10</span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;">sudo</span> update-alternatives <span class="at" style="color: #657422;">--set</span> python3 /usr/bin/python3.10</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>update-alternatives: using /usr/bin/python3.11 to provide /usr/bin/python3 (python3) in auto mode
update-alternatives: using /usr/bin/python3.10 to provide /usr/bin/python3 (python3) in manual mode</code></pre>
</div>
</div>
<p>and do the same for <code>pydoc3</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="fu" style="color: #4758AB;">sudo</span> update-alternatives <span class="at" style="color: #657422;">--install</span> /usr/bin/pydoc3 pydoc3 /usr/bin/pydoc3.11 11</span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;">sudo</span> update-alternatives <span class="at" style="color: #657422;">--install</span> /usr/bin/pydoc3 pydoc3 /usr/bin/pydoc3.10 10</span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;">sudo</span> update-alternatives <span class="at" style="color: #657422;">--set</span> pydoc3 /usr/bin/pydoc3.10</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>update-alternatives: using /usr/bin/pydoc3.11 to provide /usr/bin/pydoc3 (pydoc3) in auto mode
update-alternatives: using /usr/bin/pydoc3.10 to provide /usr/bin/pydoc3 (pydoc3) in manual mode</code></pre>
</div>
</div>
</section>
<section id="install-rust" class="level2">
<h2 class="anchored" data-anchor-id="install-rust">Install Rust</h2>
<p>Some Python modules now depend on Rust to build. I want to install Rust system-wide, in <code>/opt/rust</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="bu" style="color: null;">cd</span> /tmp</span>
<span id="cb11-2"><span class="ex" style="color: null;">curl</span> <span class="at" style="color: #657422;">--proto</span> <span class="st" style="color: #20794D;">'=https'</span> <span class="at" style="color: #657422;">--tlsv1.2</span> <span class="at" style="color: #657422;">-sSf</span> https://sh.rustup.rs <span class="op" style="color: #5E5E5E;">&gt;</span> install_rust.sh</span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;">sudo</span> RUSTUP_HOME=/opt/rust CARGO_HOME=/opt/rust sh ./install_rust.sh <span class="at" style="color: #657422;">-y</span> <span class="at" style="color: #657422;">--no-modify-path</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>info: downloading installer
info: profile set to 'default'
info: default host triple is x86_64-unknown-linux-gnu
warning: Updating existing toolchain, profile choice will be ignored
info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'
info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'

  stable-x86_64-unknown-linux-gnu unchanged - rustc 1.67.1 (d5a82bbd2 2023-02-07)


Rust is installed now. Great!

To get started you need Cargo's bin directory (/opt/rust/bin) in your PATH
environment variable. This has not been done automatically.

To configure your current shell, run:
source "/opt/rust/env"</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="bu" style="color: null;">.</span> /opt/rust/env</span>
<span id="cb13-2"><span class="ex" style="color: null;">rustup</span> default stable</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>info: using existing install for 'stable-x86_64-unknown-linux-gnu'
info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'

  stable-x86_64-unknown-linux-gnu unchanged - rustc 1.67.1 (d5a82bbd2 2023-02-07)
</code></pre>
</div>
</div>
</section>
<section id="install-packages-for-fastai-and-jupyter" class="level2">
<h2 class="anchored" data-anchor-id="install-packages-for-fastai-and-jupyter">Install packages for fastai and jupyter</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="ex" style="color: null;">pip</span> install <span class="at" style="color: #657422;">-U</span> <span class="at" style="color: #657422;">-qq</span> fastbook jupyter jupyterlab tensorflow</span></code></pre></div>
</div>
<p>Extra packages for bash and C kernels:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;">pip</span> install <span class="at" style="color: #657422;">-U</span> <span class="at" style="color: #657422;">-qq</span> nbdev bash_kernel jupyter-c-kernel</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="ex" style="color: null;">python</span> <span class="at" style="color: #657422;">-m</span> bash_kernel.install</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Installing IPython kernel spec</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="ex" style="color: null;">install_c_kernel</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Installing IPython kernel spec
/usr/local/bin/install_c_kernel:32: DeprecationWarning: replace is ignored. Installing a kernelspec always replaces an existing installation
  KernelSpecManager().install_kernel_spec(td, 'c', user=user, replace=True, prefix=prefix)</code></pre>
</div>
</div>
</section>
<section id="untold-difficulties" class="level2">
<h2 class="anchored" data-anchor-id="untold-difficulties">Untold difficulties</h2>
<p>I haven’t described all the various problems I’ve had to deal with, due to using this approach. There were plenty of problems! I guess I’m learning something from it, anyway. I wish Lambda Stack worked on Debian, not only Ubuntu, it would be a lot easier than this. Maybe I should give it a try on Debian anyway, and see what happens.</p>


</section>

 ]]></description>
  <category>fastai</category>
  <category>setup</category>
  <category>python</category>
  <category>pip</category>
  <guid>https://sam.ucm.dev/blog/posts/setup/setup.html</guid>
  <pubDate>Tue, 07 Feb 2023 13:00:00 GMT</pubDate>
</item>
<item>
  <title>Blogging AI with Jupyter and Quarto</title>
  <dc:creator>Sam Watkins</dc:creator>
  <link>https://sam.ucm.dev/blog/posts/blogging/blogging.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>I am starting this blog to record my AI studies, particularly with the <a href="https://fast.ai">fast.ai</a> book and courses.</p>
<p>In this first post, I’ll detail why and how I’m setting up this blog.</p>
</section>
<section id="why-write-a-blog" class="level2">
<h2 class="anchored" data-anchor-id="why-write-a-blog">Why write a blog?</h2>
<p>It’s important for me to record what I’m learning. If I publish these notes as a blog, I can get feedback and possibly help other people too.</p>
<p>See also:</p>
<ul>
<li>This previous post of mine on dev.to: <a href="https://dev.to/gamedev/why-write-a-dev-log-27nh">Why Write a Dev Log?</a></li>
<li>Rachael Thomas’s post: <a href="https://www.fast.ai/posts/2017-04-06-alternatives.html#why-you-yes-you-should-blog">Why you (yes, you) should blog</a></li>
<li>Another post from Rachael: <a href="https://www.fast.ai/posts/2019-05-13-blogging-advice.html">Advice for Better Blog Posts</a></li>
</ul>
</section>
<section id="why-use-jupyter-and-quarto" class="level2">
<h2 class="anchored" data-anchor-id="why-use-jupyter-and-quarto">Why use Jupyter and Quarto?</h2>
<p>The <a href="https://fast.ai">fast.ai</a> team recommends to work in <a href="https://jupyter.org/">Jupyter</a> and blog using <a href="https://quarto.org/">Quarto</a>. Their <a href="https://nbdev.fast.ai/">nbdev2</a> tool also makes use of Quarto. We can work on a notebooks in Jupyter, then run them through nbdev2 and Quarto to produce software libraries, documentation, apps, blog posts, papers, and even books.</p>
<p>See also:</p>
<ul>
<li><a href="https://www.fast.ai/posts/2022-07-28-nbdev2.html">nbdev+Quarto: A new secret weapon for productivity</a></li>
</ul>
</section>
<section id="installing-the-software" class="level2">
<h2 class="anchored" data-anchor-id="installing-the-software">Installing the software</h2>
<p>I am running the AI tools on my home PC, with Debian GNU/Linux and an NVIDIA GPU. I’ll write more about my setup in another post.</p>
<p>I downloaded Quarto from their <a href="https://quarto.org/docs/get-started/">Get Started</a> page, and installed it.</p>
<p>This command installs or upgrades the other software we need:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;">pip</span> install <span class="at" style="color: #657422;">-qq</span> <span class="at" style="color: #657422;">-U</span> jupyter fastbook nbdev</span></code></pre></div>
</div>
</section>
<section id="setting-up-the-blog" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-blog">Setting up the blog</h2>
<p>I already had a git repo called <code>ai</code> in my home directory. The following commands would create it, and don’t do any harm if it’s already there.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="bu" style="color: null;">cd</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">mkdir</span> <span class="at" style="color: #657422;">-p</span> ai</span>
<span id="cb2-3"><span class="bu" style="color: null;">cd</span> ai</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;">git</span> init</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Reinitialized existing Git repository in /home/sam/ai/.git/</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;">quarto</span> create-project blog <span class="at" style="color: #657422;">--type</span> website:blog</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Creating project at /home/sam/ai/blog:
  - Created _quarto.yml
  - Created .gitignore
  - Created index.qmd
  - Created posts/welcome/index.qmd
  - Created posts/post-with-code/index.qmd
  - Created about.qmd
  - Created styles.css
  - Created posts/_metadata.yml</code></pre>
</div>
</div>
<p>I ran <code>nbdev_install_hooks</code>, which prevents unnecessary git merge conflicts, and allows us to resolve conflicts in Jupyter.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;">nbdev_install_hooks</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Hooks are installed.</code></pre>
</div>
</div>
<p>See also:</p>
<ul>
<li><a href="https://quarto.org/docs/websites/website-blog.html">Quarto - Creating a Blog</a></li>
<li><a href="https://www.fast.ai/posts/2022-08-25-jupyter-git.html">The Jupyter+git problem is now solved</a></li>
<li><a href="https://nbdev.fast.ai/tutorials/git_friendly_jupyter.html">Git-Friendly Jupyter</a></li>
</ul>
</section>
<section id="adding-this-post-to-the-blog" class="level2">
<h2 class="anchored" data-anchor-id="adding-this-post-to-the-blog">Adding this post to the blog</h2>
<p>I had already started writing this post in a Jupyter Lab notebook <code>blogging.ipynb</code>. Now I needed to put it in the right place, so I made a directory for it:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="fu" style="color: #4758AB;">mkdir</span> <span class="at" style="color: #657422;">-p</span> blog/posts/blogging</span></code></pre></div>
</div>
<p>I then moved this notebook <code>blogging.ipynb</code> into that new <code>blog/posts/blogging</code> directory, directly in Jupyter Lab. There was no need to close the notebook.</p>
</section>
<section id="previewing-the-blog" class="level2">
<h2 class="anchored" data-anchor-id="previewing-the-blog">Previewing the blog</h2>
<p>We can preview the blog, by running this in a terminal:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;">quarto</span> preview blog</span></code></pre></div>
<p>Don’t run it in a Jupyter cell, because it doesn’t exit and will hang Jupyter!</p>
<p>I’m using a few extra options that suit my setup:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;">quarto</span> preview blog <span class="at" style="color: #657422;">--no-browser</span> <span class="at" style="color: #657422;">--port</span> 4242</span></code></pre></div>
</section>
<section id="finishing-up" class="level2">
<h2 class="anchored" data-anchor-id="finishing-up">Finishing up</h2>
<p>I removed the example posts, changed the settings, filled in the about page, added links to my socials, and added a profile picture.</p>
<p>I followed the Quarto doc to enable comments using <a href="https://web.hypothes.is/">Hypothesis</a>, and an RSS feed.</p>
<p>See also:</p>
<ul>
<li><a href="https://quarto.org/docs/output-formats/html-basics.html#commenting">Quarto - HTML Basics - Commenting</a></li>
<li><a href="https://quarto.org/docs/websites/website-blog.html#rss-feed">Quarto - Creating a Blog - RSS Feed</a></li>
</ul>
</section>
<section id="committing-to-git" class="level2">
<h2 class="anchored" data-anchor-id="committing-to-git">Committing to git</h2>
<p>The Quarto doc says “you should always fully <code>quarto render</code> your site before deploying it”, so let’s do it, and commit to git:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="bu" style="color: null;">cd</span> ~/ai</span>
<span id="cb11-2"><span class="ex" style="color: null;">quarto</span> render blog</span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;">git</span> add blog</span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;">git</span> commit <span class="at" style="color: #657422;">-m</span> <span class="st" style="color: #20794D;">'update blog'</span></span>
<span id="cb11-5"><span class="fu" style="color: #4758AB;">git</span> push</span>
<span id="cb11-6"><span class="fu" style="color: #4758AB;">git</span> push opal</span>
<span id="cb11-7"><span class="fu" style="color: #4758AB;">git</span> push pi</span></code></pre></div>
</div>
<p>I pushed to github, and my two servers <em>opal</em> and <em>pi</em>.</p>
<p>See also:</p>
<ul>
<li><a href="https://quarto.org/docs/websites/">Quarto - Websites</a></li>
</ul>
</section>
<section id="publishing-the-blog" class="level2">
<h2 class="anchored" data-anchor-id="publishing-the-blog">Publishing the blog</h2>
<p>I used a symlink to put the rendered blog into my website at <a href="https://sam.ucm.dev/blog">sam.ucm.dev/blog</a>:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="fu" style="color: #4758AB;">ln</span> <span class="at" style="color: #657422;">-s</span> ~/ai/blog/_site ~/www/sam.ucm.dev/blog</span></code></pre></div>
<p>See also:</p>
<ul>
<li><a href="https://quarto.org/docs/publishing/">Quarto - Publishing</a></li>
</ul>


</section>

 ]]></description>
  <category>fastai</category>
  <category>blogging</category>
  <category>Jupyter</category>
  <category>Quarto</category>
  <guid>https://sam.ucm.dev/blog/posts/blogging/blogging.html</guid>
  <pubDate>Tue, 07 Feb 2023 13:00:00 GMT</pubDate>
</item>
</channel>
</rss>
