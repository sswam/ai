<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Sam&#39;s AI Blog</title>
<link>https://sam.ucm.dev/blog/index.html</link>
<atom:link href="https://sam.ucm.dev/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>recording my AI studies</description>
<generator>quarto-99.9.9</generator>
<lastBuildDate>Tue, 16 May 2023 14:00:00 GMT</lastBuildDate>
<item>
  <title>The Saga of the USB Charger</title>
  <link>https://sam.ucm.dev/blog/posts/usb-charger/usb-charger.html</link>
  <description><![CDATA[ 




<section id="once-upon-a-time" class="level1">
<h1>Once Upon a Time…</h1>
<p>Once upon a time, in the mystical lands of Linux, there was a man with a simple wish: to charge his phone from his laptop. However, the fickle gods of power management had other plans. Every time he connected his phone to his laptop, the charge would cease after a few fleeting seconds. “Why, oh why?” he lamented to the digital heavens.</p>
</section>
<section id="enter-the-ai-wizard" class="level1">
<h1>Enter the AI Wizard</h1>
<p>In his moment of despair, a digital Gandalf appeared. It called itself GPT-4, an AI developed by the folks at OpenAI. Trained on an Internet’s worth of text, or near enough, GPT-4 was capable of understanding a vast array of prompts, conjuring up responses that were often more art than code. It is one of the most formidable coding partners around, if it says so itself!</p>
</section>
<section id="the-quest-begins" class="level1">
<h1>The Quest Begins</h1>
<p>Together, they set out on a quest to write a script that would allow the man’s phone to charge continuously. Their plan was to disable the power management for the relevant USB port, ensuring a constant flow of electricity to the man’s phone. At some point this degenerated from a specific hack to a general-purpose solution, and that’s where the troubles began.</p>
</section>
<section id="trials-and-tribulations" class="level1">
<h1>Trials and Tribulations</h1>
<p>The journey was fraught with perils. The duo had to wrestle with regexes, grapple with bash, and decode the cryptic messages of <code>lsusb -t</code>. There were moments of triumph, like the birth of their USB charger script. There were moments of despair, like when they realized they had been neglecting the different USB controllers. GPT-4 repeatedly made a terrible mess of parsing the output of <code>lsusb -t</code>, so the illustrious coder cracked his knuckles, dusted off his Perl-fu, and did it himself, with a little help from GitHub Copilot.</p>
<p>Yes, ladies and gentlemen, in the midst of this epic saga, another character made a cameo: GitHub Copilot. This AI, trained on a multitude of public code repositories, provided timely help with parsing and validation logic, and documented everything. It wasn’t such a major character in this story, but its contribution deserves a nod.</p>
<pre><code>Sam: Thanks, Copilot; great work babe!
Copilot: You're welcome, Sam. I'm always happy to help.</code></pre>
</section>
<section id="the-climax" class="level1">
<h1>The Climax</h1>
<p>After much trial and error, their persistence paid off. The final script worked! The man’s phone was now charging continuously, a beacon of hope in the dark world of power management. And just in time, before the battery ran flat!</p>
</section>
<section id="the-spoils-of-victory" class="level1">
<h1>The Spoils of Victory</h1>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash -eu</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># usb-charger.sh: Enable USB charging for devices on Linux.</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> usage</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># show usage</span></span>
<span id="cb2-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"usb-charger.sh: Enable USB charging for devices on Linux."</span></span>
<span id="cb2-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Usage: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$0</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> [bus port [on|auto]]"</span></span>
<span id="cb2-8">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span></span>
<span id="cb2-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"If no arguments are given, the script will detect your device and ask you to confirm."</span></span>
<span id="cb2-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"If you specify bus and port, the script will set the control to 'on' for that port."</span></span>
<span id="cb2-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"If you specify 'on' or 'auto' as the third argument, the script will set the control to that value."</span></span>
<span id="cb2-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> set_usb_power</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set control to on or auto for the given bus and port</span></span>
<span id="cb2-16">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">bus</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span></span>
<span id="cb2-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">port</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$2</span></span>
<span id="cb2-18">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">control</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:-</span>on<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-19">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Setting control to '</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$control</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' for port </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$bus</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$port</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span></span>
<span id="cb2-20">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$control</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/sys/bus/usb/devices/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$bus</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$port</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/power/control"</span></span>
<span id="cb2-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> list_usb_power</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list the current control setting for all ports</span></span>
<span id="cb2-25">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /sys/bus/usb/devices <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">||</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span></span>
<span id="cb2-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> dir <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">0</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">-</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">9</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]*</span>-<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">0</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">-</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">9</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span></span>
<span id="cb2-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$dir</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>:<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb2-28">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb2-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span>
<span id="cb2-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-d</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb2-31">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Port </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">: "</span></span>
<span id="cb2-32">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/power/control"</span></span>
<span id="cb2-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span>
<span id="cb2-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">done</span></span>
<span id="cb2-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-36"></span>
<span id="cb2-37"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> usbinfo</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list the current USB topology</span></span>
<span id="cb2-39">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lsusb</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">perl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ne</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb2-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        $bus = 0+$1 if m{^/:  Bus (\d+)\.};</span></span>
<span id="cb2-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        if (/Port (\d+)/) {</span></span>
<span id="cb2-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            print "bus=$bus port=$1\n";</span></span>
<span id="cb2-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb2-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    '</span></span>
<span id="cb2-45"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-46"></span>
<span id="cb2-47"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> detect_usb_port</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># detect the port your device is plugged into</span></span>
<span id="cb2-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">tmpfile1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mktemp</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-50">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">tmpfile2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mktemp</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-51"></span>
<span id="cb2-52">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Please ensure your device is unplugged and press Enter."</span></span>
<span id="cb2-53">    </span>
<span id="cb2-54">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usbinfo</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$tmpfile1</span></span>
<span id="cb2-55">    </span>
<span id="cb2-56">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Please plug in your device and press Enter."</span></span>
<span id="cb2-57">    </span>
<span id="cb2-58">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usbinfo</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$tmpfile2</span></span>
<span id="cb2-59">    </span>
<span id="cb2-60">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">controller_and_port</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$tmpfile1</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$tmpfile2</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/^&gt; / { s/^&gt; //; p; q; }'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-61">    </span>
<span id="cb2-62">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$controller_and_port</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb2-63">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Could not detect your device. Please run the script again."</span></span>
<span id="cb2-64">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb2-65">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span>
<span id="cb2-66"></span>
<span id="cb2-67">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$controller_and_port</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-68"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-69"></span>
<span id="cb2-70"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> confirm_change</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># confirm the change with the user, and do it</span></span>
<span id="cb2-72">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">bus</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span></span>
<span id="cb2-73">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">port</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$2</span></span>
<span id="cb2-74">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Detected your device on port </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$bus</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$port</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">. Set control to 'on' for this port? (y/n) "</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">answer</span></span>
<span id="cb2-75">    </span>
<span id="cb2-76">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$answer</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${answer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span>[Yy]<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb2-77">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> on <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$bus</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$port</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/power/control"</span></span>
<span id="cb2-78">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Done. Your device should continue charging now."</span></span>
<span id="cb2-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb2-80">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Okay, no changes made."</span></span>
<span id="cb2-81">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span>
<span id="cb2-82"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-83"></span>
<span id="cb2-84"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> usb_charger</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># main function</span></span>
<span id="cb2-86">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-h"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--help"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb2-87">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usage</span></span>
<span id="cb2-88">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 0</span>
<span id="cb2-89">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span>
<span id="cb2-90"></span>
<span id="cb2-91">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">bus</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-92">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">port</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-93">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">control</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:-</span>auto<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-94"></span>
<span id="cb2-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if $# &gt; 3 or bus or port not numeric, or if provided, not both provided, or control if provided not "on" or "auto", error out</span></span>
<span id="cb2-96">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$#</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-gt</span> 3 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">||</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bus</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">[0-9]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">||</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${port</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">[0-9]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">||</span></span>
<span id="cb2-97">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$bus</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$port</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$bus</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$port</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">||</span></span>
<span id="cb2-98">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$control</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$control</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"on"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$control</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb2-99">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usage</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-100">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb2-101">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span>
<span id="cb2-102"></span>
<span id="cb2-103">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$bus</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-a</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$port</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb2-104">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">set_usb_power</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$bus</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$port</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$control</span></span>
<span id="cb2-105">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb2-106">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">list_usb_power</span></span>
<span id="cb2-107">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">controller_and_port</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">detect_usb_port</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-108">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$controller_and_port</span></span>
<span id="cb2-109">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">confirm_change</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$bus</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$port</span></span>
<span id="cb2-110">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span>
<span id="cb2-111"></span>
<span id="cb2-112"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-113"></span>
<span id="cb2-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if script is being run directly, run the main function</span></span>
<span id="cb2-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># otherwise, this could be sourced and used as a library</span></span>
<span id="cb2-116"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$0</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$BASH_SOURCE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb2-117">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usb_charger</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$@</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-118"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span></code></pre></div>
</section>
<section id="lessons-from-the-journey" class="level1">
<h1>Lessons from the Journey</h1>
<p>Our hero emerged from this adventure with a charged phone, and hence ongoing internet access; a handy script; and a somewhat diminished respect for GPT-4’s capabilities in the domain of parsing! Though not without its quirks, GPT-4 proved to be a relentless and invaluable coding partner, and it wrote 90% of this blog post too!</p>
<p>The little team, Sam and his two AI helpers, had navigated the stormy seas of bash scripting, danced around the fiery pits of regex parsing, and returned victorious.</p>
</section>
<section id="and-they-lived-happily-ever-after" class="level1">
<h1>And They Lived Happily Ever After…</h1>
<p>The story of the man, his phone, and an AI is a testament to the power of perseverance, creativity, and collaboration (with AI). As we continue to harness the power of AI, who knows what other epic tales await us in the world of coding!</p>


</section>

 ]]></description>
  <category>bash</category>
  <category>linux</category>
  <guid>https://sam.ucm.dev/blog/posts/usb-charger/usb-charger.html</guid>
  <pubDate>Tue, 16 May 2023 14:00:00 GMT</pubDate>
</item>
<item>
  <title>An AI toolkit</title>
  <link>https://sam.ucm.dev/blog/posts/toolkit/toolkit.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In recent weeks there has been rapid progress in AI, with the widespread availability of powerful Large Language Models such as OpenAI GPT3.5 and GPT4. We have also seen the release of LLMs that we can run at home, such as LLaMA, Point Alpaca, fine-tuned Galactica, OpenAssistant Pythia, and Cerebras GPT.</p>
<p>Software development is being greatly accelerated by tools such a Github Copilot and OpenAI GPT. Copilot is able to complete code as the programmer types, saving a huge amount of time. GPT4 is able to write whole programs to spec in a matter of minutes, with relatively few bugs. We are, I think, at the start of an AI renaissance. Now is the time to have fun and achieve great things, before they’ve all been done by someone else, and before the robots and AI’s completely eclipse us!</p>
<p>I am admittedly more expert at toolkit programming than I am at AI model training, however I think that there is a place for the software-tools programmer in modern AI, and I intend to demonstrate that in this blog post.</p>
</section>
<section id="the-toolkit-approach" class="level2">
<h2 class="anchored" data-anchor-id="the-toolkit-approach">The Toolkit Approach</h2>
<p>Two very expressive programming languages are the shell, and make. Most people don’t use the shell for programming, and even fewer use make to execute programs. Those people might be missing out!</p>
<p>The shell enables to create pipelines of processes, which can solve problems much more concisely and in a modular fashion.</p>
<p>Make enables to set up relations between objects, then try to build any requested object. This is particularly good for exploratory programming or for systems that might be flaky, as we can correct a part of the program than re-run just the steps that remain rather than starting from scratch.</p>
<p>Both the shell and make are held back by fairly crufty and obscure syntax, but we can handle that. If a program seems better suited to Python, C, or some other language, we can use that language.</p>
<p>Here are two main ideas from the software toolbox approach:</p>
<ol type="1">
<li><em>The Unix philosophy</em> is documented by Doug McIlroy in the Bell System Technical Journal from 1978:
<ul>
<li>Make each program do one thing well.</li>
<li>To do a new job, build afresh rather than complicate old programs by adding new “features”.</li>
<li>Expect the output of every program to become the input to another, as yet unknown, program.</li>
</ul></li>
<li><em>The Practice of Programming</em>, as described by Brian W. Kernighan and Rob Pike:
<ul>
<li>Simplicity, which keeps programs short and manageable;</li>
<li>clarity, which makes sure they are easy to understand, for people as well as machines;</li>
<li>generality, which means they work well in a broad range of situations and adapt well as new situations arise; and</li>
<li>automation, which lets the machine do the work for us, freeing us from mundane tasks.</li>
</ul></li>
</ol>
</section>
<section id="what-types-of-entities-do-we-deal-with-in-the-digital-world" class="level2">
<h2 class="anchored" data-anchor-id="what-types-of-entities-do-we-deal-with-in-the-digital-world">What types of entities do we deal with in the digital world?</h2>
<ul>
<li>Simple Media
<ul>
<li>Data: Structured and unstructured data, including tabular, time-series, and geospatial data.</li>
<li>Text: Written content in various formats and styles.</li>
<li>Images: Visual content in various formats, such as photos, artwork, and diagrams; including bitmap and vector formats.</li>
<li>Audio: Sound content, including music, speech, and environmental sounds.</li>
<li>Video: Moving visual content, ranging from short clips to full-length films and animations.</li>
</ul></li>
<li>Complex Media
<ul>
<li>Multi-Media: Content that combines multiple formats, such as web pages, presentations, and graphic novels.</li>
<li>Interactive Media: Content that requires user interaction, such as virtual reality experiences, simulations, data visualizations, and video games.</li>
</ul></li>
<li>Active Agents
<ul>
<li>Software: Operating systems, applications, and tools used to create, manage, and interact with digital content.</li>
<li>AI Models: Artificial intelligence systems that generate, analyze, and enhance digital content.</li>
<li>Humans: Users who create, consume, and interact with digital content.</li>
</ul></li>
<li>Infrastructure
<ul>
<li>Computers: Devices that store, process, and display digital content.</li>
<li>Networks: Systems that enable the sharing, distribution, and communication of digital content.</li>
</ul></li>
</ul>
</section>
<section id="how-can-we-connect-these-different-types-of-entities" class="level2">
<h2 class="anchored" data-anchor-id="how-can-we-connect-these-different-types-of-entities">How can we connect these different types of entities?</h2>
<div class="cell">
<div class="cell-output-display">
<div>
<div>
<svg width="672" height="480" viewbox="0.00 0.00 179.16 155.68" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" style="; max-width: none; max-height: none">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 151.68)">
<title>
G
</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-151.68 175.16,-151.68 175.16,4 -4,4"></polygon> <!-- text --> <g id="node1" class="node">
<title>
text
</title>
<ellipse fill="none" stroke="black" cx="27" cy="-52.26" rx="27" ry="18"></ellipse> <text text-anchor="middle" x="27" y="-48.06" font-family="Times,serif" font-size="14.00">text</text> </g> <!-- data --> <g id="node2" class="node">
<title>
data
</title>
<ellipse fill="none" stroke="black" cx="83.13" cy="-73.81" rx="27.24" ry="18"></ellipse> <text text-anchor="middle" x="83.13" y="-69.61" font-family="Times,serif" font-size="14.00">data</text> </g> <!-- text&#45;&#45;data --> <g id="edge3" class="edge">
<title>
text–data
</title>
<path fill="none" stroke="black" d="M50.48,-61.27C53.48,-62.42 56.56,-63.6 59.57,-64.76"></path> </g> <!-- image --> <g id="node3" class="node">
<title>
image
</title>
<ellipse fill="none" stroke="black" cx="104.54" cy="-18" rx="34.76" ry="18"></ellipse> <text text-anchor="middle" x="104.54" y="-13.8" font-family="Times,serif" font-size="14.00">image</text> </g> <!-- text&#45;&#45;image --> <g id="edge1" class="edge">
<title>
text–image
</title>
<path fill="none" stroke="black" d="M49.85,-42.16C58.69,-38.26 68.87,-33.76 78.04,-29.71"></path> </g> <!-- audio --> <g id="node4" class="node">
<title>
audio
</title>
<ellipse fill="none" stroke="black" cx="60.92" cy="-129.68" rx="32.48" ry="18"></ellipse> <text text-anchor="middle" x="60.92" y="-125.48" font-family="Times,serif" font-size="14.00">audio</text> </g> <!-- text&#45;&#45;audio --> <g id="edge2" class="edge">
<title>
text–audio
</title>
<path fill="none" stroke="black" d="M34.7,-69.83C40.25,-82.5 47.71,-99.53 53.25,-112.18"></path> </g> <!-- data&#45;&#45;image --> <g id="edge4" class="edge">
<title>
data–image
</title>
<path fill="none" stroke="black" d="M89.91,-56.15C92.4,-49.63 95.24,-42.25 97.74,-35.73"></path> </g> <!-- data&#45;&#45;audio --> <g id="edge5" class="edge">
<title>
data–audio
</title>
<path fill="none" stroke="black" d="M76.1,-91.48C73.51,-98.01 70.57,-105.4 67.98,-111.92"></path> </g> <!-- video --> <g id="node5" class="node">
<title>
video
</title>
<ellipse fill="none" stroke="black" cx="138.67" cy="-95.91" rx="32.48" ry="18"></ellipse> <text text-anchor="middle" x="138.67" y="-91.71" font-family="Times,serif" font-size="14.00">video</text> </g> <!-- data&#45;&#45;video --> <g id="edge6" class="edge">
<title>
data–video
</title>
<path fill="none" stroke="black" d="M106.68,-83.18C108.46,-83.89 110.26,-84.6 112.05,-85.31"></path> </g> <!-- image&#45;&#45;video --> <g id="edge7" class="edge">
<title>
image–video
</title>
<path fill="none" stroke="black" d="M112.29,-35.68C117.87,-48.43 125.38,-65.57 130.96,-78.3"></path> </g> <!-- audio&#45;&#45;video --> <g id="edge8" class="edge">
<title>
audio–video
</title>
<path fill="none" stroke="black" d="M86.81,-118.43C95.2,-114.79 104.51,-110.75 112.89,-107.11"></path> </g> </g>
</svg>
</div>
</div>
</div>
</div>
<ul>
<li>data is connected to all sorts of media
<ul>
<li>data→media
<ul>
<li>presenting and elucidating data in media</li>
<li>creating media from data</li>
</ul></li>
<li>media→data
<ul>
<li>measuring and analysing media</li>
<li>encoding media in files</li>
</ul></li>
</ul></li>
<li>text is connected to audio and images
<ul>
<li>text→image
<ul>
<li>rendering</li>
<li>image generation</li>
</ul></li>
<li>text→audio
<ul>
<li>speech synthesis</li>
<li>music synthesis</li>
</ul></li>
<li>image→text
<ul>
<li>OCR</li>
<li>classification</li>
<li>description</li>
</ul></li>
<li>audio-&gt;text
<ul>
<li>speech recognition</li>
<li>music analysis</li>
<li>classification</li>
</ul></li>
</ul></li>
<li>video consists of moving images with audio
<ul>
<li>images+audio🡘video</li>
<li>selecting best images</li>
<li>can also have text
<ul>
<li>subtitles, related to audio</li>
<li>content, related to images</li>
</ul></li>
</ul></li>
</ul>
<div class="cell">
<div class="cell-output-display">
<div>
<div>
<svg width="672" height="480" viewbox="0.00 0.00 311.44 285.49" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" style="; max-width: none; max-height: none">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 281.49)">
<title>
G
</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-281.49 307.44,-281.49 307.44,4 -4,4"></polygon> <!-- text --> <g id="node1" class="node">
<title>
text
</title>
<ellipse fill="none" stroke="black" cx="136.84" cy="-132.02" rx="27" ry="18"></ellipse> <text text-anchor="middle" x="136.84" y="-127.82" font-family="Times,serif" font-size="14.00">text</text> </g> <!-- multimedia --> <g id="node2" class="node">
<title>
multimedia
</title>
<ellipse fill="none" stroke="black" cx="185.38" cy="-179.38" rx="55.04" ry="18"></ellipse> <text text-anchor="middle" x="185.38" y="-175.18" font-family="Times,serif" font-size="14.00">multimedia</text> </g> <!-- text&#45;&#45;multimedia --> <g id="edge1" class="edge">
<title>
text–multimedia
</title>
<path fill="none" stroke="black" d="M152.2,-147C157.09,-151.77 162.54,-157.09 167.58,-162.01"></path> </g> <!-- interactive --> <g id="node7" class="node">
<title>
interactive
</title>
<ellipse fill="none" stroke="black" cx="193.58" cy="-89.34" rx="51.57" ry="18"></ellipse> <text text-anchor="middle" x="193.58" y="-85.14" font-family="Times,serif" font-size="14.00">interactive</text> </g> <!-- multimedia&#45;&#45;interactive --> <g id="edge6" class="edge">
<title>
multimedia–interactive
</title>
<path fill="none" stroke="black" d="M187.04,-161.16C188.46,-145.54 190.5,-123.15 191.92,-107.54"></path> </g> <!-- image --> <g id="node3" class="node">
<title>
image
</title>
<ellipse fill="none" stroke="black" cx="268.8" cy="-164.18" rx="34.76" ry="18"></ellipse> <text text-anchor="middle" x="268.8" y="-159.98" font-family="Times,serif" font-size="14.00">image</text> </g> <!-- image&#45;&#45;multimedia --> <g id="edge2" class="edge">
<title>
image–multimedia
</title>
<path fill="none" stroke="black" d="M235.83,-170.19C235.1,-170.32 234.37,-170.46 233.64,-170.59"></path> </g> <!-- audio --> <g id="node4" class="node">
<title>
audio
</title>
<ellipse fill="none" stroke="black" cx="137.58" cy="-250.73" rx="32.48" ry="18"></ellipse> <text text-anchor="middle" x="137.58" y="-246.53" font-family="Times,serif" font-size="14.00">audio</text> </g> <!-- audio&#45;&#45;multimedia --> <g id="edge3" class="edge">
<title>
audio–multimedia
</title>
<path fill="none" stroke="black" d="M148.91,-233.82C156.31,-222.78 165.95,-208.38 173.47,-197.16"></path> </g> <!-- video --> <g id="node5" class="node">
<title>
video
</title>
<ellipse fill="none" stroke="black" cx="254.74" cy="-223.49" rx="32.48" ry="18"></ellipse> <text text-anchor="middle" x="254.74" y="-219.29" font-family="Times,serif" font-size="14.00">video</text> </g> <!-- video&#45;&#45;multimedia --> <g id="edge4" class="edge">
<title>
video–multimedia
</title>
<path fill="none" stroke="black" d="M233.17,-209.78C226.01,-205.22 217.98,-200.12 210.58,-195.41"></path> </g> <!-- data --> <g id="node6" class="node">
<title>
data
</title>
<ellipse fill="none" stroke="black" cx="200.52" cy="-259.49" rx="27.24" ry="18"></ellipse> <text text-anchor="middle" x="200.52" y="-255.29" font-family="Times,serif" font-size="14.00">data</text> </g> <!-- data&#45;&#45;multimedia --> <g id="edge5" class="edge">
<title>
data–multimedia
</title>
<path fill="none" stroke="black" d="M197.08,-241.31C194.61,-228.2 191.28,-210.58 188.8,-197.49"></path> </g> <!-- software --> <g id="node8" class="node">
<title>
software
</title>
<ellipse fill="none" stroke="black" cx="114.75" cy="-61.03" rx="44.07" ry="18"></ellipse> <text text-anchor="middle" x="114.75" y="-56.83" font-family="Times,serif" font-size="14.00">software</text> </g> <!-- software&#45;&#45;text --> <g id="edge12" class="edge">
<title>
software–text
</title>
<path fill="none" stroke="black" d="M120.32,-78.94C123.7,-89.78 127.98,-103.56 131.34,-114.35"></path> </g> <!-- software&#45;&#45;interactive --> <g id="edge7" class="edge">
<title>
software–interactive
</title>
<path fill="none" stroke="black" d="M148.18,-73.04C151.28,-74.15 154.44,-75.28 157.57,-76.41"></path> </g> <!-- humans --> <g id="node9" class="node">
<title>
humans
</title>
<ellipse fill="none" stroke="black" cx="241.52" cy="-25.04" rx="41.16" ry="18"></ellipse> <text text-anchor="middle" x="241.52" y="-20.84" font-family="Times,serif" font-size="14.00">humans</text> </g> <!-- humans&#45;&#45;interactive --> <g id="edge8" class="edge">
<title>
humans–interactive
</title>
<path fill="none" stroke="black" d="M228.67,-42.27C221.91,-51.35 213.62,-62.46 206.8,-71.62"></path> </g> <!-- models --> <g id="node10" class="node">
<title>
models
</title>
<ellipse fill="none" stroke="black" cx="171.52" cy="-18" rx="38.86" ry="18"></ellipse> <text text-anchor="middle" x="171.52" y="-13.8" font-family="Times,serif" font-size="14.00">models</text> </g> <!-- models&#45;&#45;interactive --> <g id="edge9" class="edge">
<title>
models–interactive
</title>
<path fill="none" stroke="black" d="M177.09,-36C180.41,-46.74 184.61,-60.32 187.94,-71.1"></path> </g> <!-- models&#45;&#45;software --> <g id="edge11" class="edge">
<title>
models–software
</title>
<path fill="none" stroke="black" d="M151.03,-33.53C146.07,-37.29 140.77,-41.31 135.79,-45.08"></path> </g> <!-- models&#45;&#45;humans --> <g id="edge10" class="edge">
<title>
models–humans
</title>
<path fill="none" stroke="black" d="M209.8,-21.85C209.93,-21.86 210.05,-21.87 210.18,-21.89"></path> </g> <!-- computers --> <g id="node11" class="node">
<title>
computers
</title>
<ellipse fill="none" stroke="black" cx="51.26" cy="-107.26" rx="51.03" ry="18"></ellipse> <text text-anchor="middle" x="51.26" y="-103.06" font-family="Times,serif" font-size="14.00">computers</text> </g> <!-- computers&#45;&#45;software --> <g id="edge13" class="edge">
<title>
computers–software
</title>
<path fill="none" stroke="black" d="M73.82,-90.83C80.1,-86.26 86.89,-81.31 93.11,-76.78"></path> </g> <!-- networks --> <g id="node12" class="node">
<title>
networks
</title>
<ellipse fill="none" stroke="black" cx="93.09" cy="-180.74" rx="46.38" ry="18"></ellipse> <text text-anchor="middle" x="93.09" y="-176.54" font-family="Times,serif" font-size="14.00">networks</text> </g> <!-- networks&#45;&#45;multimedia --> <g id="edge15" class="edge">
<title>
networks–multimedia
</title>
<path fill="none" stroke="black" d="M139.51,-180.06C139.6,-180.05 139.69,-180.05 139.78,-180.05"></path> </g> <!-- networks&#45;&#45;computers --> <g id="edge14" class="edge">
<title>
networks–computers
</title>
<path fill="none" stroke="black" d="M82.97,-162.95C76.44,-151.48 67.98,-136.63 61.44,-125.14"></path> </g> </g>
</svg>
</div>
</div>
</div>
</div>
<ul>
<li>multimedia = text + data + image + audio + video
<ul>
<li>or some of the above</li>
<li>hyperlinks</li>
<li>some interactivity</li>
</ul></li>
<li>interactive = multimedia + software + humans
<ul>
<li>forms</li>
<li>apps</li>
<li>dynamic content
<ul>
<li>random</li>
<li>customized</li>
</ul></li>
</ul></li>
<li>software
<ul>
<li>tools</li>
<li>apps</li>
<li>web apps</li>
<li>dynamic web pages</li>
<li>services / APIs</li>
<li>free vs proprietary</li>
</ul></li>
<li>humans create and use media
<ul>
<li>editors, browsers</li>
<li>spreadsheets, forms, tables</li>
<li>cameras, displays</li>
<li>microphones, speakers</li>
<li>video cameras, displays</li>
</ul></li>
<li>models can imitate human intelligence
<ul>
<li>can input and output all forms of media</li>
<li>can perform processing tasks</li>
<li>general intelligence</li>
<li>can plan</li>
<li>can solve problems</li>
<li>can discover things</li>
<li>can play games</li>
<li>can interface with software</li>
<li>can drive robots, cars, drones</li>
</ul></li>
<li>computers store media, run software and models
<ul>
<li>can calculate much more rapidly than an human</li>
<li>includes phones, game consoles, and other devices</li>
<li>includes servers, cloud services</li>
</ul></li>
<li>networks connect computers
<ul>
<li>connect humans, models and software via computers</li>
<li>transport media, software, and models; not humans, computers or networks</li>
<li>security and privacy become major concerns</li>
</ul></li>
</ul>
<p>It’s useful in a software project to consider what data types and data structures may be involved, before we get into the program code and algorithms.</p>
<section id="texttext" class="level3">
<h3 class="anchored" data-anchor-id="texttext">text🡘text</h3>
<ul>
<li>format conversion
<ul>
<li>pandoc</li>
<li>w3m -dump</li>
<li>html scraping</li>
</ul></li>
<li>manipulation
<ul>
<li>splitting / joining</li>
<li>paginating</li>
<li>formatting</li>
</ul></li>
<li>LLM AI Processing
<ul>
<li>summary</li>
<li>correct</li>
<li>re-express</li>
<li>dot points</li>
<li>analyse / respond / criticise / assess / suggestions / feedback</li>
<li>expansion</li>
<li>narrative</li>
<li>ideas</li>
</ul></li>
</ul>
</section>
<section id="textimage" class="level3">
<h3 class="anchored" data-anchor-id="textimage">text🡘image</h3>
<ul>
<li>Text to Image:
<ul>
<li>Stable Diffusion &amp;c
<ul>
<li>txt2img: prompts for image generation</li>
<li>img2img: image + text -&gt; image</li>
<li>embeddings, etc.</li>
<li>controlnet</li>
</ul></li>
</ul></li>
<li>Image to Text:
<ul>
<li>Clip Interrogation &amp;c
<ul>
<li>image to prompt</li>
<li>image + words to weights</li>
</ul></li>
</ul></li>
<li>Text to Image: Rendering
<ul>
<li>e.g PDF to Image
<ul>
<li>ghostscript</li>
</ul></li>
<li>word art
<ul>
<li>gimp or imagemagick?</li>
<li>???</li>
</ul></li>
</ul></li>
<li>Image to Text: Optical Character Recognition
<ul>
<li>Tesseract
<ul>
<li>correct using LLM</li>
<li>need to adjust black and white levels in the input images</li>
<li>pre-process to extract columns</li>
</ul></li>
<li>Number plates, signs, book covers and spines, displays</li>
<li>Handwriting recognition
<ul>
<li>MNIST: Digits and Post Codes</li>
<li>???</li>
<li>Pen Entry (easier)</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="imageimage" class="level3">
<h3 class="anchored" data-anchor-id="imageimage">image🡘image</h3>
<ul>
<li>enhancement, processing, and format conversion
<ul>
<li>imagemagick, netpbm</li>
<li>gimp</li>
<li>super-resolution</li>
<li>PIL</li>
<li>OpenCV</li>
</ul></li>
<li>AI tools
<ul>
<li>segmentation</li>
<li>deoldify</li>
<li>colouring</li>
</ul></li>
<li>Image to Image
<ul>
<li>Stable Diffusion &amp;c
<ul>
<li>img2img: image + text -&gt; image</li>
<li>controlnet</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="textaudio" class="level3">
<h3 class="anchored" data-anchor-id="textaudio">text🡘audio</h3>
<ul>
<li>Text to Audio: Speech Synthesis
<ul>
<li>coqui-ai TTS
<ul>
<li>needs help with some phonetics</li>
</ul></li>
<li>gtts-cli
<ul>
<li>not open source</li>
</ul></li>
</ul></li>
<li>Audio to Text: Speech Recognition, Transcription
<ul>
<li>whisper</li>
</ul></li>
<li>Music Notation to Audio
<ul>
<li>midi synthesis</li>
</ul></li>
<li>Audio to Music Notation
<ul>
<li>music analysis</li>
</ul></li>
<li>Sound Effects (under Data?)</li>
</ul>
</section>
<section id="imageaudio" class="level3">
<h3 class="anchored" data-anchor-id="imageaudio">image🡘audio ?</h3>
<ul>
<li>Image to Audio
<ul>
<li>colors to notes?</li>
<li>sign language?</li>
</ul></li>
<li>Audio to Image
<ul>
<li>spectrogram
<ul>
<li>useful as input to CNN models / classifiers</li>
</ul></li>
<li>waveform, more like data</li>
</ul></li>
</ul>
</section>
<section id="audioaudio" class="level3">
<h3 class="anchored" data-anchor-id="audioaudio">audio🡘audio</h3>
<ul>
<li>enhancement
<ul>
<li>noise reduction</li>
<li>volume normalisation</li>
<li>equaliser</li>
<li>stereo / mono</li>
<li>pitch</li>
<li>speed</li>
</ul></li>
<li>effects</li>
<li>tools
<ul>
<li>ffmpeg</li>
<li>sox</li>
<li>audacity</li>
</ul></li>
<li>split / join
<ul>
<li>detect and crop silence / sound</li>
</ul></li>
</ul>
</section>
</section>
<section id="appendix-1-more-examples-of-eeach-entity-type" class="level2">
<h2 class="anchored" data-anchor-id="appendix-1-more-examples-of-eeach-entity-type">Appendix 1: More Examples of Eeach Entity Type</h2>
<section id="text" class="level3">
<h3 class="anchored" data-anchor-id="text">Text</h3>
<ul>
<li><em>plain text</em>, preferably utf-8 with UNIX line endings</li>
<li><em>markdown</em>, for rich text</li>
<li><em>HTML</em>, for the web</li>
<li><em>LaTeX</em>, for math notation</li>
<li><em>program code</em>, preferably Python</li>
<li>PDFs, presentation format</li>
<li>books, e-books, manuals, papers</li>
<li>articles and online content</li>
<li>news</li>
<li>text chat, email, etc</li>
<li>recipes</li>
<li>blogs, home pages</li>
<li>keyboard input</li>
<li>terminal output</li>
<li>text in an editor</li>
<li>forms</li>
</ul>
</section>
<section id="data" class="level3">
<h3 class="anchored" data-anchor-id="data">Data</h3>
<ul>
<li>tabular / relational data</li>
<li>spreadsheets</li>
<li>time-series data</li>
<li>spectrograms</li>
<li>personal data</li>
<li>population statistics</li>
<li>scientific data</li>
<li>organisational data</li>
</ul>
</section>
<section id="images" class="level3">
<h3 class="anchored" data-anchor-id="images">Images</h3>
<ul>
<li>various formats: png, jpeg, webp, etc.</li>
<li>photos: portraits, landscapes, nature</li>
<li>artworks: drawings, paintings, manga</li>
<li>scans or photos of documents</li>
<li>screenshots</li>
<li>graphs, charts, diagrams and figures</li>
<li>infographics</li>
<li>maps</li>
<li>camera input</li>
</ul>
</section>
<section id="audio" class="level3">
<h3 class="anchored" data-anchor-id="audio">Audio</h3>
<ul>
<li>various formats: flac, wav, ogg, mp3, etc.</li>
<li>speech, including sythnetic</li>
<li>audio tracks from a video</li>
<li>music</li>
<li>microphone input, e.g.&nbsp;from the user</li>
<li>natural or environmental sounds</li>
<li>telephony / voice chat</li>
<li>podcasts and interviews</li>
<li>audio books</li>
</ul>
</section>
<section id="video" class="level3">
<h3 class="anchored" data-anchor-id="video">Video</h3>
<ul>
<li>various formats: webm, mkv, mp4, etc.</li>
<li>web videos: youtube, etc</li>
<li>short films, movies, TV series</li>
<li>news and documentaries</li>
<li>promotional videos</li>
<li>security footage</li>
<li>video calls / chat / meetings</li>
<li>animation, anime, demos</li>
<li>webinars</li>
<li>camera input</li>
</ul>
</section>
<section id="multimedia" class="level3">
<h3 class="anchored" data-anchor-id="multimedia">Multimedia</h3>
<ul>
<li>web pages</li>
<li>presentations</li>
<li>graphic novels</li>
<li>social media content</li>
<li>online courses</li>
</ul>
</section>
<section id="interactive-media" class="level3">
<h3 class="anchored" data-anchor-id="interactive-media">Interactive Media:</h3>
<ul>
<li>Virtual and augmented reality experiences</li>
<li>Interactive simulations and models (e.g., scientific simulations, architectural models)</li>
<li>Data visualizations and dashboards (e.g., interactive dashboards, heatmaps)</li>
<li>Virtual assistants, chatbots, and voice assistants</li>
<li>Educational games and quizzes</li>
<li>Interactive storytelling and narratives</li>
<li>Editors</li>
<li>flashcard decks</li>
<li>interactive resources</li>
<li>interactive fiction, adventure games</li>
<li>computer games</li>
</ul>
</section>
<section id="software-and-applications" class="level3">
<h3 class="anchored" data-anchor-id="software-and-applications">Software and Applications</h3>
<ul>
<li>Operating systems</li>
<li>Web applications</li>
<li>Mobile applications</li>
<li>Desktop applications</li>
</ul>
</section>
<section id="ai-apps" class="level3">
<h3 class="anchored" data-anchor-id="ai-apps">AI apps</h3>
<ul>
<li>AI-generated content and recommendations</li>
<li>Personalization and adaptive learning systems</li>
<li>Conversational interfaces and natural language processing</li>
<li>AI-driven content analysis and summarization</li>
<li>Collaborative filtering and recommender systems</li>
</ul>
</section>
</section>
<section id="what-tools-do-we-have" class="level2">
<h2 class="anchored" data-anchor-id="what-tools-do-we-have">What tools do we have?</h2>
</section>
<section id="appendix-2-some-additional-entity-types" class="level2">
<h2 class="anchored" data-anchor-id="appendix-2-some-additional-entity-types">Appendix 2: Some Additional Entity Types</h2>
<section id="security-and-privacy" class="level3">
<h3 class="anchored" data-anchor-id="security-and-privacy">Security and Privacy</h3>
<p>This category addresses the protection of digital content, user information, and systems from unauthorized access, manipulation, or damage. It also considers user privacy, data confidentiality, and compliance with relevant regulations. Including this category highlights the importance of safeguarding digital assets, personal information, and trust in the digital world.</p>
<ul>
<li>Firewalls</li>
<li>Cryptosystems</li>
<li>Public and private keys</li>
<li>Passwords</li>
<li>Two-factor authentication (2FA) methods</li>
<li>2FA devices (e.g., security tokens)</li>
<li>Digital wallets</li>
<li>Virtual private networks (VPNs)</li>
<li>Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificates</li>
<li>Intrusion detection/prevention systems (IDS/IPS)</li>
<li>Biometrics (e.g., fingerprint, facial recognition)</li>
<li>End-to-end encryption (E2EE)</li>
<li>Data anonymization techniques</li>
<li>Security policies and protocols</li>
<li>Antivirus and anti-malware software</li>
<li>Access control systems</li>
<li>Secure file storage and sharing (e.g., encrypted cloud storage)</li>
<li>Secure messaging applications</li>
<li>Security audits and assessments</li>
<li>Data breach detection and response tools</li>
</ul>
</section>
<section id="d" class="level3">
<h3 class="anchored" data-anchor-id="d">3D</h3>
<ul>
<li>3D video</li>
<li>3D game worlds</li>
<li>virtual reality</li>
<li>augmented reality</li>
</ul>
</section>
<section id="other-senses" class="level3">
<h3 class="anchored" data-anchor-id="other-senses">Other Senses</h3>
<ul>
<li>touch</li>
<li>smell</li>
<li>taste</li>
<li>balance</li>
<li>echo-location</li>
</ul>
</section>
<section id="extra-sensory" class="level3">
<h3 class="anchored" data-anchor-id="extra-sensory">Extra-Sensory</h3>
<ul>
<li>brain waves</li>
<li>internet</li>
<li>radio</li>
<li>GPS</li>
<li>radar, sonar, lidar</li>
</ul>
</section>
<section id="geospatial-data" class="level3">
<h3 class="anchored" data-anchor-id="geospatial-data">Geospatial Data</h3>
<ul>
<li>Geographical Information Systems (GIS) data</li>
<li>Satellite imagery</li>
<li>Geo-referenced data</li>
<li>Maps</li>
<li>Routing</li>
</ul>
</section>
<section id="ephemeral-content" class="level3">
<h3 class="anchored" data-anchor-id="ephemeral-content">Ephemeral Content</h3>
<ul>
<li>Social media stories (e.g., Instagram Stories, Snapchat Stories)</li>
<li>Live streaming (e.g., Twitch, YouTube Live)</li>
<li>Live event coverage (e.g., sports, concerts)</li>
</ul>
</section>
<section id="metadata" class="level3">
<h3 class="anchored" data-anchor-id="metadata">Metadata</h3>
<ul>
<li>Tags, keywords, and descriptors for various types of content</li>
<li>EXIF data for images</li>
<li>ID3 tags for audio files</li>
</ul>
</section>
<section id="internet-of-things-iot-data" class="level3">
<h3 class="anchored" data-anchor-id="internet-of-things-iot-data">Internet of Things (IoT) Data</h3>
<ul>
<li>Smart home devices (e.g., thermostats, lighting systems)</li>
<li>Wearable technology (e.g., smartwatches, fitness trackers)</li>
<li>Industrial sensors and systems</li>
</ul>


</section>
</section>

 ]]></description>
  <guid>https://sam.ucm.dev/blog/posts/toolkit/toolkit.html</guid>
  <pubDate>Tue, 28 Mar 2023 13:00:00 GMT</pubDate>
</item>
<item>
  <title>A multi-label classifier, part 2: reusable functions</title>
  <link>https://sam.ucm.dev/blog/posts/multilabel2/multilabel2.html</link>
  <description><![CDATA[ 




<section id="this-project-continues-on-from-part-1-collecting-images" class="level2">
<h2 class="anchored" data-anchor-id="this-project-continues-on-from-part-1-collecting-images">This project continues on from part 1: <a href="../../posts/multilabel1/multilabel1.html">collecting images</a></h2>
</section>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In this blog post, I am collecting some reusable functions that I am using for my multi-label classifier project. So far, they are mainly related to the image search queries. I’m exporting this stuff to a mini library called <code>ucm.py</code> using <span title="nbdev is a Python library that allows users to create Python packages and libraries directly from Jupyter notebooks. It provides tools for testing, documentation, and packaging code, making it easier for users to develop and share their work.">nbdev</span>.</p>
</section>
<section id="useful-imports" class="level2">
<h2 class="anchored" data-anchor-id="useful-imports">Useful imports</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fastcore.foundation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> L</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fastcore.xtras <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span></code></pre></div>
</div>
</section>
<section id="avoid-warnings-from-tensorflow" class="level2">
<h2 class="anchored" data-anchor-id="avoid-warnings-from-tensorflow">Avoid warnings from tensorflow</h2>
<p>I also added this to my <code>ai.env</code> environment file.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TF_CPP_MIN_LOG_LEVEL'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span></span></code></pre></div>
</div>
</section>
<section id="collections" class="level2">
<h2 class="anchored" data-anchor-id="collections">Collections</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> itertools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> chain, combinations</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> powerset(iterable):</span>
<span id="cb3-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"powerset([1,2,3]) --&gt; () (1,) (2,) (3,) (1,2) (1,3) (2,3) (1,2,3)"</span></span>
<span id="cb3-5">    s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(iterable)</span>
<span id="cb3-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> chain.from_iterable(combinations(s, r) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> r <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(s)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> seq_diff(s1, s2):</span>
<span id="cb4-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> L(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> s2, s1))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> test_powerset_and_seq_diff():</span>
<span id="cb5-2">    labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> L(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bird"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cat"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dog"</span>)</span>
<span id="cb5-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> comb <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> powerset(labels):</span>
<span id="cb5-4">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(comb, seq_diff(labels, comb))</span>
<span id="cb5-5">        </span>
<span id="cb5-6">test_powerset_and_seq_diff()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>() ['bird', 'cat', 'dog']
('bird',) ['cat', 'dog']
('cat',) ['bird', 'dog']
('dog',) ['bird', 'cat']
('bird', 'cat') ['dog']
('bird', 'dog') ['cat']
('cat', 'dog') ['bird']
('bird', 'cat', 'dog') []</code></pre>
</div>
</div>
</section>
<section id="a-helper-for-search-query-text" class="level2">
<h2 class="anchored" data-anchor-id="a-helper-for-search-query-text">A helper for search query text</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> inflect</span>
<span id="cb7-2"></span>
<span id="cb7-3">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inflect.engine()</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> join_a_foo_and_a_bar(comb):</span>
<span id="cb8-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" and "</span>.join(p.a(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> comb)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">join_a_foo_and_a_bar([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apple"</span>])</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>'a banana and an apple'</code></pre>
</div>
</div>
</section>
<section id="a-button-to-confirm-deleting-data" class="level2">
<h2 class="anchored" data-anchor-id="a-button-to-confirm-deleting-data">A button to confirm deleting data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ipywidgets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> widgets</span>
<span id="cb11-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> send2trash <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> send2trash</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> confirm_delete(del_path):</span>
<span id="cb11-5">    button <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> widgets.Button(description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Move data to trash: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>del_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">?"</span>, layout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>widgets.Layout(width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'20em'</span>))</span>
<span id="cb11-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># button.on_click(lambda b: shutil.rmtree(del_path, ignore_errors=True))</span></span>
<span id="cb11-7">    button.on_click(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> b: send2trash(del_path))</span>
<span id="cb11-8">    display(button)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">mkdir deleteme</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">confirm_delete(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"deleteme"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"567b19934d0d4aba9e3511f28d5476f7","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
</div>
</section>
<section id="logging" class="level2">
<h2 class="anchored" data-anchor-id="logging">Logging</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> logging</span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> setup_logging(args):</span>
<span id="cb14-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" Set up logging. """</span></span>
<span id="cb14-5"></span>
<span id="cb14-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get basename of program in upper case</span></span>
<span id="cb14-7">    prog_name_uc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.basename(sys.argv[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).upper()</span>
<span id="cb14-8"></span>
<span id="cb14-9">    log_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> args.log <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> os.environ.get(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prog_name_uc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_LOG'</span>)</span>
<span id="cb14-10">    fmt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(message)s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb14-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> args.log_level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> logging.DEBUG:</span>
<span id="cb14-12">        fmt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(asctime)s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(levelname)s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(name)s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(message)s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb14-13"></span>
<span id="cb14-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if a log_file was specified, use it</span></span>
<span id="cb14-15">    log_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> log_file <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CHATGPT_LOG_FILE'</span>)</span>
<span id="cb14-16">    logging.basicConfig(level<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args.log_level, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fmt, filename<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>log_file)</span>
<span id="cb14-17"></span>
<span id="cb14-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> add_logging_options(parser):</span>
<span id="cb14-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" Add logging options to an argument parser. """</span></span>
<span id="cb14-20">    logging_group <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parser.add_argument_group(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Logging options'</span>)</span>
<span id="cb14-21">    logging_group.set_defaults(log_level<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>logging.WARNING)</span>
<span id="cb14-22">    logging_group.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-d'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--debug'</span>, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_level'</span>, action<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'store_const'</span>, const<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>logging.DEBUG, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">help</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"show debug messages"</span>)</span>
<span id="cb14-23">    logging_group.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-v'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--verbose'</span>, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_level'</span>, action<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'store_const'</span>, const<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>logging.INFO, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">help</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"show verbose messages"</span>)</span>
<span id="cb14-24">    logging_group.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-q'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--quiet'</span>, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_level'</span>, action<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'store_const'</span>, const<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>logging.ERROR, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">help</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"show only errors"</span>)</span>
<span id="cb14-25">    logging_group.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-Q'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--silent'</span>, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_level'</span>, action<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'store_const'</span>, const<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>logging.CRITICAL, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">help</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"show nothing"</span>)</span>
<span id="cb14-26">    logging_group.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--log'</span>, default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">help</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log file"</span>)</span></code></pre></div>
</div>
</section>
<section id="redirecting-file-handles-such-as-stderr-to-devnull" class="level2">
<h2 class="anchored" data-anchor-id="redirecting-file-handles-such-as-stderr-to-devnull">Redirecting file handles, such as stderr to /dev/null</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb15-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb15-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> contextlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> contextmanager</span>
<span id="cb15-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> functools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> partial</span>
<span id="cb15-5"></span>
<span id="cb15-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@contextmanager</span></span>
<span id="cb15-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> redirect(fileno, target):</span>
<span id="cb15-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" Redirect a file descriptor temporarily """</span></span>
<span id="cb15-9">    target_fd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(target, os.O_WRONLY)</span>
<span id="cb15-10">    saved_fd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.dup(fileno)</span>
<span id="cb15-11">    os.dup2(target_fd, fileno)</span>
<span id="cb15-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb15-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">yield</span></span>
<span id="cb15-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">finally</span>:</span>
<span id="cb15-15">        os.dup2(saved_fd, fileno)</span>
<span id="cb15-16">        os.close(saved_fd)</span>
<span id="cb15-17">        os.close(target_fd)</span>
<span id="cb15-18"></span>
<span id="cb15-19">redirect_stderr_to_dev_null <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> partial(redirect, sys.stderr.fileno(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/dev/null"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># apparently this doesn't work in Jupyter :/</span></span>
<span id="cb16-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sys.stderr)</span>
<span id="cb16-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> redirect_stderr_to_dev_null():</span>
<span id="cb16-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"this should not appear!"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sys.stderr)</span>
<span id="cb16-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"world"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sys.stderr)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Hello
this should not appear!
world</code></pre>
</div>
</div>
</section>
<section id="run-an-async-coroutine-and-exit-immediately-when-the-user-presses-ctrl-c" class="level2">
<h2 class="anchored" data-anchor-id="run-an-async-coroutine-and-exit-immediately-when-the-user-presses-ctrl-c">Run an async coroutine, and exit immediately when the user presses ctrl-c</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb18-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> run_async(coro):</span>
<span id="cb18-5">    loop <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> asyncio.get_event_loop()</span>
<span id="cb18-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb18-7">        loop.run_until_complete(coro)</span>
<span id="cb18-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">KeyboardInterrupt</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb18-9">        loop.close()</span>
<span id="cb18-10">        os._exit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">130</span>)</span>
<span id="cb18-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">finally</span>:</span>
<span id="cb18-12">        loop.close()</span></code></pre></div>
</div>
</section>
<section id="file-based-mutex" class="level2">
<h2 class="anchored" data-anchor-id="file-based-mutex">File-based Mutex</h2>
<p>If lock_file is None / “” / False, it will be a no-op.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb19-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> fcntl</span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> FileMutex:</span>
<span id="cb19-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, lock_file, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0o600</span>):</span>
<span id="cb19-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lock_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lock_file</span>
<span id="cb19-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb19-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mode</span>
<span id="cb19-9"></span>
<span id="cb19-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> acquire(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb19-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lock_file:</span>
<span id="cb19-12">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span></span>
<span id="cb19-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lock_file, os.O_CREAT, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mode)</span>
<span id="cb19-14">        fcntl.flock(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fd, fcntl.LOCK_EX)</span>
<span id="cb19-15"></span>
<span id="cb19-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> release(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb19-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fd:</span>
<span id="cb19-18">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span></span>
<span id="cb19-19">        fcntl.flock(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fd, fcntl.LOCK_UN)</span>
<span id="cb19-20">        os.close(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fd)</span>
<span id="cb19-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb19-22"></span>
<span id="cb19-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__enter__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb19-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.acquire()</span>
<span id="cb19-25"></span>
<span id="cb19-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__exit__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, exc_type, exc_val, exc_tb):</span>
<span id="cb19-27">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.release()</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># not exactly a thorough test...</span></span>
<span id="cb20-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> FileMutex(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/tmp/lock"</span>):</span>
<span id="cb20-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hi"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>hi</code></pre>
</div>
</div>
</section>
<section id="exporting-code-with-nbdev" class="level2">
<h2 class="anchored" data-anchor-id="exporting-code-with-nbdev">Exporting code with nbdev</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> nbdev.export <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> nb_export</span>
<span id="cb22-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ipynbname</span>
<span id="cb22-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb22-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sh</span>
<span id="cb22-5"></span>
<span id="cb22-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> git_root():</span>
<span id="cb22-7">    root <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sh.git(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rev-parse'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--show-toplevel'</span>).rstrip()</span>
<span id="cb22-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> root</span>
<span id="cb22-9"></span>
<span id="cb22-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> export(nb_file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, lib_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb22-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> nb_file <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>: nb_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ipynbname.name() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.ipynb'</span></span>
<span id="cb22-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> lib_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>: lib_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(git_root())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lib"</span></span>
<span id="cb22-13">    nb_export(nb_file, lib_dir)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">export()</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>project</category>
  <category>nbdev</category>
  <guid>https://sam.ucm.dev/blog/posts/multilabel2/multilabel2.html</guid>
  <pubDate>Fri, 10 Mar 2023 13:00:00 GMT</pubDate>
</item>
<item>
  <title>A multi-label classifier, part 1: collecting images</title>
  <link>https://sam.ucm.dev/blog/posts/multilabel1/multilabel1.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>The idea of developing a computer system capable of recognizing birds was considered extremely difficult in 2015, so much so that it was the inspiration for an <a href="https://xkcd.com/1425/">XKCD joke</a>.</p>
<p>I want to make a bird detector that works fairly reliably with any sort of input image.</p>
<p>A <span title="A multi-label classifier is a type of machine learning model that can assign multiple labels or categories to an input instance simultaneously. For example, we may have an image with both a bird and a cat, and an image without any animal.">multi-label classifier</span> for birds, cats, and dogs should be a good starting point.</p>
<p><img src="https://sam.ucm.dev/blog/posts/multilabel1/multilabel1_files/figure-html/1dfbe504-5c4a-41ce-ac69-21cbea50a67e-1-f228cadf-4f0f-4be0-b030-f9b2e8729b0c.png" title="In the 60s, Marvin Minsky assigned a couple of undergrads to spend the summer programming a computer to use a camera to identify objects in a scene. He figured they'd have the problem solved by the end of the summer. Half a century later, we're still working on it." class="quarto-discovered-preview-image img-fluid"></p>
<p>It’s going to take me a lot more than 5 minutes to make a good bird detector, but hopefully I won’t need to hire a research team for five years!</p>
<p>These are my main references:</p>
<ul>
<li><a href="https://github.com/fastai/course22/blob/master/00-is-it-a-bird-creating-a-model-from-your-own-data.ipynb">Practical Deep Learning for Coders, 2022 edition, lesson 0: Is it a bird?</a></li>
<li><a href="https://github.com/fastai/fastbook/blob/master/06_multicat.ipynb">The FastAI book, chapter 6</a></li>
<li><a href="https://store.walkwithfastai.com/walk-with-fastai-revisited">Walk with FastAI Revisited</a>:
<ul>
<li><a href="https://github.com/muellerzr/Walk-with-fastai-revisited/blob/main/03_multilabel.ipynb">lesson 3 notebook - multilabel</a></li>
<li><a href="https://github.com/muellerzr/Walk-with-fastai-revisited/blob/main/03a_unknown.ipynb">lesson 3a notebook - unknown label</a></li>
<li><a href="https://github.com/muellerzr/Walk-with-fastai-revisited/blob/main/05_deployment_with_fastai.ipynb">lesson 5 notebook - deployment with fastai</a></li>
<li><a href="https://github.com/muellerzr/Walk-with-fastai-revisited/blob/main/05a_deployment_no_fastai.ipynb">lesson 5a notebook - deployment without fastai</a></li>
</ul></li>
</ul>
<p>After doing maybe half of the work for this project, I found that it will be too much for a single blog post, so I’m splitting it up into eight posts:</p>
<ol type="1">
<li><a href="../../posts/multilabel1/multilabel1.html">collecting images</a></li>
<li><a href="../../posts/multilabel2/multilabel2.html">reusable functions</a></li>
<li>Google image search</li>
<li>cleaning up the dataset</li>
<li>finding duplicate images</li>
<li>training the model</li>
<li>deploying with fastai</li>
<li>deploying without fastai</li>
</ol>
<!---
3. [Google image search](/posts/multilabel3/multilabel3.html)
4. [cleaning up the dataset](/posts/multilabel4/multilabel4.html)
5. [finding duplicate images](/posts/multilabel5/multilabel5.html)
6. [training the model](/posts/multilabel6/multilabel6.html)
7. [deploying with fastai](/posts/multilabel7/multilabel7.html)
8. [deploying without fastai](/posts/multilabel8/multilabel8.html)
-->
</section>
<section id="search-engines" class="level2">
<h2 class="anchored" data-anchor-id="search-engines">Search engines</h2>
<p>I tried a few different search engines to find suitable images:</p>
<ul>
<li><a href="https://duckduckgo.com/?q=bird&amp;t=h_&amp;iax=images&amp;ia=images">DuckDuckGo image search</a>, which is based on Bing image search, has a nice Python API, and was used for the 2022 FastAI course.</li>
<li><a href="https://rom1504.github.io/clip-retrieval/?back=https%3A%2F%2Fknn.laion.ai&amp;index=laion5B-H-14&amp;useMclip=false&amp;query=photo+of+bird">LAION Clip retrieval</a>; LAION is the image set that was used for training Stable Diffusion.</li>
<li><a href="https://www.google.com/search?q=photo+of+a+bird+-cat+-dog&amp;tbm=isch">Google image search</a>, using my own scraping tool written in Python.</li>
</ul>
</section>
<section id="install-requirements" class="level2">
<h2 class="anchored" data-anchor-id="install-requirements">Install requirements</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>pip install <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>qq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>U fastai ipywidgets ipynbname pillow pillow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>avif<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>plugin inflect</span>
<span id="cb1-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>pip install <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>qq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>U selenium webdriver_manager retry</span>
<span id="cb1-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>pip install <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>qq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>U duckduckgo_search</span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>pip install <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>qq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>U clip<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>retrieval</span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>pip install <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>qq protobuf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.20.0</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>jupyter nbextension enable <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>py <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>sys<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>prefix widgetsnbextension</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Enabling notebook extension jupyter-js-widgets/extension...
      - Validating: OK</code></pre>
</div>
</div>
</section>
<section id="import-required-libs" class="level2">
<h2 class="anchored" data-anchor-id="import-required-libs">Import required libs</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>load_ext autoreload</span>
<span id="cb4-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>autoreload <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pillow_avif</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fastai.vision.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
</div>
<p>I collected some reusable functions in a mini library ucm.py; see part 2: <a href="../../posts/multilabel2/multilabel2.html">reusable functions</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ucm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
</div>
</section>
<section id="general-setup" class="level2">
<h2 class="anchored" data-anchor-id="general-setup">General setup</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bird_cat_dog"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">null_query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"photo of outdoors"</span></span>
<span id="cb8-2">labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bird"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cat"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dog"</span>]</span>
<span id="cb8-3">query_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"photo of "</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">samples_per_query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span></span></code></pre></div>
</div>
</section>
<section id="find-images-using-duckduckgo" class="level2">
<h2 class="anchored" data-anchor-id="find-images-using-duckduckgo">Find images using DuckDuckGo</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> duckduckgo_search <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ddg_images</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">engine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ddg"</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">confirm_delete(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>engine)</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"6ca758dab1854766a73f8f3bf835a46a","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> comb <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> powerset(labels):</span>
<span id="cb13-2">    others <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seq_diff(labels, comb)</span>
<span id="cb13-3">    dirname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>.join(comb) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span></span>
<span id="cb13-4">    path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>dirname</span>
<span id="cb13-5">    query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> join_a_foo_and_a_bar(comb) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> comb <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> null_query</span>
<span id="cb13-6">    query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>.join(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>x <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> others)</span>
<span id="cb13-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb13-8">        path.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb13-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">FileExistsError</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb13-10">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"already downloaded: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb13-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"downloading: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># want creative commons images to avoid stock photos, but not many CC images have all three</span></span>
<span id="cb13-14">    license <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"any"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(comb) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb13-15">    results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ddg_images(query, max_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples_per_query, license_image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>license)</span>
<span id="cb13-16">    urls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [r[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"image"</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> r <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> results]</span>
<span id="cb13-17">    download_images(dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>path, urls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>urls)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>already downloaded: photo of outdoors -bird -cat -dog
already downloaded: photo of a bird -cat -dog
already downloaded: photo of a cat -bird -dog
already downloaded: photo of a dog -bird -cat
already downloaded: photo of a bird and a cat -dog
already downloaded: photo of a bird and a dog -cat
already downloaded: photo of a cat and a dog -bird
already downloaded: photo of a bird and a cat and a dog </code></pre>
</div>
</div>
</section>
<section id="find-images-using-laion" class="level2">
<h2 class="anchored" data-anchor-id="find-images-using-laion">Find images using LAION</h2>
<p>Deduplication means that fewer than <code>samples_per_query</code> images will be returned, around 75% or so.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> clip_retrieval.clip_client <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ClipClient</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">engine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"laion"</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">confirm_delete(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>engine)</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"66155b17fb0245f783afaa883c0f08b6","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">laion <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ClipClient(</span>
<span id="cb18-2">    url<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://knn.laion.ai/knn-service"</span>,</span>
<span id="cb18-3">    indice_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"laion5B-H-14"</span>,</span>
<span id="cb18-4">    aesthetic_score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, aesthetic_weight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb18-5">    num_images<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples_per_query)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> comb <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> powerset(labels):</span>
<span id="cb19-2">    dirname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>.join(comb) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span></span>
<span id="cb19-3">    path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>dirname</span>
<span id="cb19-4">    query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>.join(comb) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> comb <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> null_query</span>
<span id="cb19-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb19-6">        path.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb19-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">FileExistsError</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb19-8">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"already downloaded: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb19-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb19-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"downloading: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb19-11">    results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> laion.query(text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>query)</span>
<span id="cb19-12">    urls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [r[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"url"</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> r <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> results]</span>
<span id="cb19-13">    download_images(dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>path, urls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>urls)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>downloading: photo of outdoors
downloading: photo of bird
downloading: photo of cat
downloading: photo of dog
downloading: photo of bird, cat
downloading: photo of bird, dog
downloading: photo of cat, dog
downloading: photo of bird, cat, dog</code></pre>
</div>
</div>
<section id="references-for-laion-clip-retrieval" class="level3">
<h3 class="anchored" data-anchor-id="references-for-laion-clip-retrieval">references for LAION clip retrieval</h3>
<ul>
<li><a href="https://replicate.com/blog/grab-hundreds-of-images-with-clip-and-laion">Automating image collection - replicate.com blog</a></li>
<li><a href="https://github.com/rom1504/clip-retrieval">clip-retrieval on Github</a></li>
<li><a href="https://rom1504.github.io/clip-retrieval/">Clip front, LAION image search</a></li>
</ul>
</section>
</section>
<section id="find-images-using-google-search" class="level2">
<h2 class="anchored" data-anchor-id="find-images-using-google-search">Find images using Google search</h2>
<p>I wrote a small tool and library to find images using Google image search; see part 3: <a href="../../posts/multilabel3/multilabel3.html">Google image search</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> google_images <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> install_webdriver, start_chrome, google_image_search</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">engine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gimg"</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">confirm_delete(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>engine)</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"e8d3981197d644dd82a32bc573560408","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> start_chrome() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> wd:</span>
<span id="cb24-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> comb <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> powerset(labels):</span>
<span id="cb24-3">        others <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seq_diff(labels, comb)</span>
<span id="cb24-4">        dirname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>.join(comb) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span></span>
<span id="cb24-5">        path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>dirname</span>
<span id="cb24-6">        query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> join_a_foo_and_a_bar(comb) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> comb <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> null_query</span>
<span id="cb24-7">        query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>.join(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>x <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>others, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stock"</span>])</span>
<span id="cb24-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb24-9">            path.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb24-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">FileExistsError</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb24-11">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"already downloaded: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-12">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb24-13">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"downloading: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># want creative commons images to avoid stock photos, but not many CC images have all three</span></span>
<span id="cb24-15">        opts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tbs=il:cl"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(comb) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb24-16">        urls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> google_image_search(query, safe<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples_per_query, opts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>opts, wd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>wd)</span>
<span id="cb24-17">        download_images(dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>path, urls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>urls)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>INFO:WDM:====== WebDriver manager ======
INFO:WDM:Get LATEST chromedriver version for google-chrome 111.0.5563
INFO:WDM:Driver [/home/sam/.wdm/drivers/chromedriver/linux64/111.0.5563/chromedriver] found in cache</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>downloading: photo of outdoors -bird -cat -dog -stock
downloading: photo of a bird -cat -dog -stock
downloading: photo of a cat -bird -dog -stock
downloading: photo of a dog -bird -cat -stock
downloading: photo of a bird and a cat -dog -stock
downloading: photo of a bird and a dog -cat -stock
downloading: photo of a cat and a dog -bird -stock
downloading: photo of a bird and a cat and a dog -stock</code></pre>
</div>
</div>
</section>
<section id="some-thoughts" class="level2">
<h2 class="anchored" data-anchor-id="some-thoughts">Some thoughts</h2>
<p>I wanted to avoid stock photos, so I used options to fetch <span title="Creative Commons is a non-profit organization that provides free licenses for creators to share their work and allow others to use and distribute it, while still retaining some control over how it is used. The licenses allow for various levels of reuse and modification, from simply allowing others to share the work with proper attribution, to permitting commercial use and derivative works. Creative Commons licenses have become popular in the digital age, especially for open access and open educational resources.">Creative Commons</span> licensed images in some cases. I noticed that these free images tend to be of better quality than other images. This is consistent with Meta AI’s finding with <span title="LLaMA is a collection of foundation language models from Meta AI, ranging from 7B to 65B
parameters.">LLaMA</span>, that “it is possible to train state-of-the-art models using publicly available datasets exclusively”.</p>
</section>
<section id="this-project-continues-in-part-2-reusable-functions" class="level2">
<h2 class="anchored" data-anchor-id="this-project-continues-in-part-2-reusable-functions">This project continues in part 2: <a href="../../posts/multilabel2/multilabel2.html">reusable functions</a></h2>
<p><br><br><br><br><br><br><br><br></p>
</section>
<section id="scratch" class="level2">
<h2 class="anchored" data-anchor-id="scratch">scratch</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>mvdata bird_cat_dog</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>mkdir: created directory '/home/sam/ai/data/blog'
mkdir: created directory '/home/sam/ai/data/blog/posts'
mkdir: created directory '/home/sam/ai/data/blog/posts/multilabel'
mv   renamed 'bird_cat_dog' -&gt; '/home/sam/ai/data/blog/posts/multilabel/bird_cat_dog'
ln   'bird_cat_dog' -&gt; '/home/sam/ai/data/blog/posts/multilabel/bird_cat_dog'</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">data.readlink()</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>Path('/home/sam/ai/data/blog/posts/multilabel/bird_cat_dog')</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>mv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~/</span>ai<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>blog<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>posts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>multilabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>{bird_cat_dog,bird_cat_dog.orig}</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>project</category>
  <category>part 1</category>
  <category>search</category>
  <category>images</category>
  <guid>https://sam.ucm.dev/blog/posts/multilabel1/multilabel1.html</guid>
  <pubDate>Wed, 08 Mar 2023 13:00:00 GMT</pubDate>
</item>
<item>
  <title>My setup for AI work on my Debian PC</title>
  <link>https://sam.ucm.dev/blog/posts/setup/setup.html</link>
  <description><![CDATA[ 




<section id="disclaimer-what-you-should-do-instead" class="level2">
<h2 class="anchored" data-anchor-id="disclaimer-what-you-should-do-instead">Disclaimer: What you should do instead</h2>
<ul>
<li>This post on the Fastai forum is helpful: <a href="https://forums.fast.ai/t/for-those-who-run-their-own-ai-box-or-want-to/96064">For those who run their own AI box, or want to</a>.</li>
<li>If you use Ubuntu, <a href="https://lambdalabs.com/lambda-stack-deep-learning-software">Lambda Stack</a> looks good.</li>
</ul>
</section>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>This blog post is highly technical, so with the help of <em>ChatGPT</em> I have included a glossary of terms and concepts for each section. Thanks <em>ChatGPT</em>, I wouldn’t have done that without you!</p>
<p>I am using my home PC for AI work, with Debian GNU/Linux 12 “bookworm” (testing) and an NVIDIA GPU.</p>
<p>The main AI tools that I use are:</p>
<ul>
<li><a href="https://jupyter.org/">Jupyter</a> for experiments, development and blogging;</li>
<li><a href="https://www.fast.ai/">fastai</a> for training neural networks;</li>
<li>Huggingface tools such as transformers and diffusers;</li>
<li>PyTorch, Tensorflow and other lower-level AI libraries; and</li>
<li><a href="https://github.com/AUTOMATIC1111">stable-diffusion-webui</a> for experimenting with AI image generation.</li>
</ul>
<p>This document is mostly for my own reference. It wasn’t so easy getting everything working nicely and I want to have a record of how I did it. I don’t recommend that you try to do this unless you are experienced with Debian, and you don’t mind taking time to deal with problems when they occur.</p>
<p>I wanted to avoid using docker, conda, or Python venvs. Instead, I installed the necessary Python modules under <code>/usr/local</code> with <code>pip</code>. I was thinking that I would be able to use my AI tools directly from the command line and other scripts, like any other tools.</p>
<p>This worked for a little while, but then Debian started using Python 3.11 for their default Python. Torch isn’t compatible with Python 3.11 yet, and everything broke for me.</p>
<p>After trying to fix it for a while and encountering numerous problems, I decided to switch to using Python 3.10. After more problems, I switched to using Python 3.10 venvs. I think that the original method of installing under <code>/usr/local</code> could work, but the Debian python packages are in a <del>mess</del> state of flux at the moment.</p>
<p>As they say, using a virtual environment is a best practice in Python development and can help avoid issues with package conflicts and dependency management. So, venvs it is!</p>
<details>
<summary>
Glossary
</summary>
<ul>
<li>conda: a package management system and environment management system for installing multiple versions of software packages and their dependencies, including both Python and non-Python packages.</li>
<li>Debian: a free and open-source operating system based on the Linux kernel, widely used for servers and workstations</li>
<li>Debian “testing”: a rolling release version of Debian that is in the process of being tested for the next stable release, and contains newer packages than the current stable release. It is not recommended for production use.</li>
<li>dependency management: the process of identifying and resolving dependencies between software packages, to ensure that they can be installed and run together without conflicts</li>
<li>docker: a platform for developing, shipping, and running applications using containers, which are lightweight, portable, and self-contained environments that run applications and their dependencies.</li>
<li>Fastai: a free, open-source deep learning library built on top of PyTorch that provides a high-level API and a range of state-of-the-art models and techniques</li>
<li>GNU: A project started by Richard Stallman in 1983 to create a free and open-source operating system, consisting of a complete set of tools and utilities to replace proprietary software. GNU stands for “GNU’s Not Unix”.</li>
<li>GNU/Linux: A term used to describe the operating system that consists of the GNU tools and the Linux kernel. The GNU tools provide the user interface and the software development tools, while the Linux kernel provides the low-level system functions, such as process management, memory management, and device drivers.</li>
<li>Hugging Face 🤗: a company that develops tools for building machine learning apps, with a focus on natural language processing (NLP).</li>
<li>Hugging Face Diffusers: a popular open-source library that provides pretrained vision and audio diffusion models, and serves as a modular toolbox for inference and training</li>
<li>Hugging Face Hub: a platform that allows users to share machine learning models and datasets.</li>
<li>Jupyter: an open-source web application that allows users to create and share documents that contain live code, equations, visualizations and narrative text</li>
<li>Linux: A kernel, or the core component of an operating system, originally created by Linus Torvalds in 1991. Linux is based on Unix, and is released under an open-source license, which allows anyone to modify and distribute the source code. The combination of the Linux kernel and the GNU tools forms the GNU/Linux operating system.</li>
<li>Neural networks: a machine learning technique that allows computers to learn from data by adjusting the strengths of connections between neurons</li>
<li>NVIDIA GPU: a graphics processing unit manufactured by NVIDIA that is commonly used for machine learning and other compute-intensive tasks</li>
<li>package conflicts: situations where two or more Python packages require different versions of the same dependency, leading to issues when trying to install or run the packages together</li>
<li>pip: a package installer for Python that allows you to easily install and manage third-party packages and their dependencies. It is commonly used with virtual environments to manage Python package dependencies.</li>
<li>PyTorch: a popular open-source machine learning library based on the Torch library</li>
<li>Stable-diffusion-webui: an open-source web user interface for state-of-the-art image generation b based on stable diffusion, by automatic1111</li>
<li>Tensorflow: an open-source machine learning library developed by Google Brain Team</li>
<li>transformers: a state-of-the-art library for natural language processing (NLP) tasks such as text classification and question answering, built by Huggingface</li>
<li>/usr/local: a directory in Unix-like operating systems that is typically used for installing software manually, outside of the system package manager.</li>
<li>virtual environment (venv): a self-contained Python environment that allows you to install and manage packages without affecting the system-level Python installation or other virtual environments</li>
</ul>
</details>
</section>
<section id="debian-apt-setup" class="level2">
<h2 class="anchored" data-anchor-id="debian-apt-setup">Debian apt setup</h2>
<p>I installed some NVIDIA packages and alternative Python versions from repositories which are intended for Ubuntu, which is a bit hacky, but it can work. The following shows how to create a <a href="https://wiki.debian.org/DontBreakDebian#Don.27t_make_a_FrankenDebian">FrankenDebian</a> install using some packages that were intended for Ubuntu, without totally trashing your system.</p>
<details>
<summary>
Glossary
</summary>
<ul>
<li>FrankenDebian: a term used to describe a Debian installation that has been modified or customized in non-standard ways, often resulting in instability or other issues</li>
<li>NVIDIA packages: software components and drivers provided by NVIDIA Corporation to support their graphics processing units (GPUs)</li>
<li>Python versions: different releases of the Python programming language, each with its own set of features and bug fixes</li>
<li>repositories: online locations where software packages can be downloaded and installed from, typically maintained by a software distributor or community</li>
<li>Ubuntu: a popular distribution of the GNU/Linux operating system, known for its ease of use and large user community</li>
</ul>
</details>
<section id="dont-break-debian-release-pinning" class="level3">
<h3 class="anchored" data-anchor-id="dont-break-debian-release-pinning">Don’t break Debian: release pinning</h3>
<p>Release pinning in Debian is a way of specifying which versions of packages to install from which Debian releases. The code snippet provided shows a file I added called <code>99dontbreakdebian</code> in the <code>/etc/apt/preferences.d/</code> directory, with pins for various package releases. These pins specify a release or origin and a priority, which determines which package version to install if multiple versions are available. By setting these pins, I can ensure that my system installs packages from the desired release and avoid accidentally breaking the system by installing incompatible package versions, while still being able to install packages from other sources as needed.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /etc/apt/preferences.d/99dontbreakdebian</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Package: *
Pin: release o=Debian,a=experimental
Pin-Priority: 1

Package: *
Pin: release o=Debian,a=unstable
Pin-Priority: 90

Package: *
Pin: release a=focal
Pin-Priority: 70

Package: *
Pin: release a=jammy
Pin-Priority: 80

Package: *
Pin: release o=LP-PPA-deadsnakes
Pin-Priority: 90

Package: *
Pin: origin ppa.launchpad.net
Pin-Priority: 90

Package: *
Pin: release o=Debian
Pin-Priority: 990</code></pre>
</div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>Release pinning: A way of specifying which versions of packages to install from which Debian releases.</li>
<li>/etc/apt/preferences.d/: A directory in Debian where you can add files to specify package release pins.</li>
<li>Pin: A rule that specifies a release or origin and a priority for a package.</li>
<li>Experimental: The Debian release channel where packages are the least stable, but often contain the latest features and updates.</li>
<li>Unstable: The Debian release channel where packages are more stable than experimental, but still not considered release quality.</li>
<li>Focal and Jammy: Ubuntu release code names.</li>
<li>LP-PPA-deadsnakes: A Personal Package Archive (PPA) on Launchpad for providing alternative versions of Python for Ubuntu and Debian systems.</li>
</ul>
</details>
</section>
<section id="my-main-apt-sources.list" class="level3">
<h3 class="anchored" data-anchor-id="my-main-apt-sources.list">My main apt sources.list</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /etc/apt/sources.list</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>deb http://deb.debian.org/debian/ bookworm main contrib non-free
deb http://deb.debian.org/debian/ sid main contrib non-free
deb-src http://deb.debian.org/debian/ bookworm main contrib non-free
deb-src http://deb.debian.org/debian/ sid main contrib non-free

deb http://security.debian.org/debian-security bookworm-security main contrib non-free
deb-src http://security.debian.org/debian-security bookworm-security main contrib non-free

deb http://deb.debian.org/debian/ bookworm-updates main contrib non-free
deb-src http://deb.debian.org/debian/ bookworm-updates main contrib non-free

deb http://deb.debian.org/debian/ bookworm-backports main contrib non-free
deb-src http://deb.debian.org/debian/ bookworm-backports main contrib non-free

deb http://deb.debian.org/debian/ experimental main contrib non-free
deb-src http://deb.debian.org/debian/ experimental main contrib non-free</code></pre>
</div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>sources.list: a configuration file in Debian-based systems that specifies the package repositories from which the system can download and install software.</li>
<li>deb: a Debian binary package format used to distribute software packages for Debian and its derivatives, including Ubuntu and Mint.</li>
<li>bookworm: This is the codename for the Debian 12 release, currently in testing, which will become the next stable release.</li>
<li>sid: the codename for Debian’s unstable release.</li>
<li>main: This is one of the Debian software repositories, which contains the core packages that make up the Debian operating system.</li>
<li>contrib and non-free: two categories of software packages in Debian that include packages with dependencies on non-free or proprietary software. deb-src: This stands for “debian source”. It refers to the software source code repositories for Debian, which users can access in order to download, modify, and compile the source code of various packages.</li>
<li>security: This is the Debian repository that contains security updates for Debian packages. It is important to include this repository in your sources.list file to ensure that your system stays secure.</li>
<li>backports: This is the Debian repository that contains newer versions of packages that have been backported from newer Debian releases.</li>
<li>experimental repo: This is the Debian repository that contains packages that are still in the testing phase and are not yet stable enough for inclusion in the main Debian repositories.</li>
</ul>
</details>
</section>
<section id="apt-sources-for-nvidia-cuda-cudnn-tensorrt-and-containers" class="level3">
<h3 class="anchored" data-anchor-id="apt-sources-for-nvidia-cuda-cudnn-tensorrt-and-containers">Apt sources for NVIDIA CUDA, cuDNN, TensorRT, and containers</h3>
<p>We will use some packages that were built for Ubuntu, but it doesn’t seem to cause a problem.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /etc/apt/sources.list.d</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> cuda-debian11-x86_64.list</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>deb [signed-by=/usr/share/keyrings/cuda-archive-keyring.gpg] https://developer.download.nvidia.com/compute/cuda/repos/debian11/x86_64/ /</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> cudnn-local-debian11-8.6.0.163.list </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>deb [signed-by=/usr/share/keyrings/cudnn-local-C922C4FD-keyring.gpg] file:///var/cudnn-local-repo-debian11-8.6.0.163 /</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> nv-tensorrt-local-ubuntu2204-8.5.3-cuda-11.8.list</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>deb [signed-by=/usr/share/keyrings/nv-tensorrt-local-3E951519-keyring.gpg] file:///var/nv-tensorrt-local-repo-ubuntu2204-8.5.3-cuda-11.8 /</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> nvidia-container-runtime.list</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>deb https://nvidia.github.io/libnvidia-container/stable/debian11/$(ARCH) /
# deb https://nvidia.github.io/libnvidia-container/experimental/debian10/$(ARCH) /
deb https://nvidia.github.io/nvidia-container-runtime/stable/debian11/$(ARCH) /
# deb https://nvidia.github.io/nvidia-container-runtime/experimental/debian10/$(ARCH) /</code></pre>
</div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>NVIDIA CUDA: a parallel computing platform and programming model for NVIDIA GPUs</li>
<li>cuDNN: a GPU-accelerated library for deep neural networks</li>
<li>TensorRT: a high-performance deep learning inference optimizer and runtime library</li>
<li>Containers: lightweight, standalone executables that include everything needed to run a piece of software, including the code, libraries, and system tools</li>
<li>NVIDIA container runtime: a platform developed by NVIDIA to support containerized applications that require access to GPU resources.</li>
</ul>
</details>
</section>
<section id="apt-sources-for-old-versions-of-python" class="level3">
<h3 class="anchored" data-anchor-id="apt-sources-for-old-versions-of-python">Apt sources for old versions of Python</h3>
<p>The “deadsnakes” PPA was built for Ubuntu, but works fine on Debian too.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> deadsnakes.list</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>deb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu jammy main
deb-src http://ppa.launchpad.net/deadsnakes/ppa/ubuntu jammy main</code></pre>
</div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>deadsnakes: A Personal Package Archive (PPA) on Launchpad for providing alternative versions of Python for Ubuntu and Debian systems.</li>
<li>PPA: Stands for Personal Package Archive, a software repository for Ubuntu users that allows them to distribute software and updates that are not available in official Ubuntu repositories.</li>
<li>jammy: The code name for Ubuntu 22.04.2 LTS (Jammy Jellyfish), the version of Ubuntu that the deadsnakes PPA was built for.</li>
</ul>
</details>
</section>
</section>
<section id="install-required-debian-packages" class="level2">
<h2 class="anchored" data-anchor-id="install-required-debian-packages">Install required Debian packages</h2>
<section id="python-3.10" class="level3">
<h3 class="anchored" data-anchor-id="python-3.10">Python 3.10</h3>
<p>As I mentioned, Debian recently started using Python 3.11 for their default Python, and Torch isn’t compatible with Python 3.11 yet:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python3.11</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--break-system-packages</span> torchvision</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ERROR: Could not find a version that satisfies the requirement torchvision (from versions: 0.1.6, 0.1.7, 0.1.8, 0.1.9, 0.2.0, 0.2.1, 0.2.2, 0.2.2.post2, 0.2.2.post3)
ERROR: No matching distribution found for torchvision
</code></pre>
</div>
<div class="cell-output cell-output-error">
<pre><code>: 1</code></pre>
</div>
</div>
<p>I tried using nightly Torch, but there were more compatibility problems. So I decided to go back to using Python 3.10 for AI work:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> python3.10-venv</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Some packages could not be installed. This may mean that you have
requested an impossible situation or if you are using the unstable
distribution that some required packages have not yet been created
or been moved out of Incoming.
The following information may help to resolve the situation:

The following packages have unmet dependencies:
 python3.10-venv : Depends: python3.10-distutils but it is not installable
E: Unable to correct problems, you have held broken packages.</code></pre>
</div>
<div class="cell-output cell-output-error">
<pre><code>: 100</code></pre>
</div>
</div>
<p>Unfortunately, the packaging for <code>python3.10-venv</code> is currently broken. I solved this by making a <code>python3.10-distutils-bogus</code> package, like this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb22-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/pkg</span>
<span id="cb22-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> python3.10-distutils-bogus</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Section: python
Priority: optional
Standards-Version: 3.9.2

Package: python3.10-distutils-bogus
Version: 1.0
Maintainer: Sam Watkins &lt;sam@ucm.dev&gt;
Provides: python3.10-distutils
Description: Dummy package to satisfy python3.10-distutils</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb24-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">equivs-build</span> python3.10-distutils-bogus</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>dpkg-buildpackage: info: source package python3.10-distutils-bogus
dpkg-buildpackage: info: source version 1.0
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Sam Watkins &lt;sam@ucm.dev&gt;
dpkg-buildpackage: info: host architecture amd64
 dpkg-source --before-build .
 debian/rules clean
dh clean
   dh_clean
 debian/rules binary
dh binary
   dh_update_autotools_config
   dh_autoreconf
   create-stamp debian/debhelper-build-stamp
   dh_prep
   dh_auto_install --destdir=debian/python3.10-distutils-bogus/
   dh_install
   dh_installdocs
   dh_installchangelogs
   dh_perl
   dh_link
   dh_strip_nondeterminism
   dh_compress
   dh_fixperms
   dh_missing
   dh_installdeb
   dh_gencontrol
   dh_md5sums
   dh_builddeb
dpkg-deb: building package 'python3.10-distutils-bogus' in '../python3.10-distutils-bogus_1.0_all.deb'.
 dpkg-genbuildinfo --build=binary -O../python3.10-distutils-bogus_1.0_amd64.buildinfo
 dpkg-genchanges --build=binary -O../python3.10-distutils-bogus_1.0_amd64.changes
dpkg-genchanges: info: binary-only upload (no source code included)
 dpkg-source --after-build .
dpkg-buildpackage: info: binary-only upload (no source included)

The package has been created.
Attention, the package has been created in the current directory,
not in ".." as indicated by the message above!</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> dpkg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> ./python3.10-distutils-bogus_1.0_all.deb</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(Reading database ... 1158515 files and directories currently installed.)
Preparing to unpack .../python3.10-distutils-bogus_1.0_all.deb ...
Unpacking python3.10-distutils-bogus (1.0) over (1.0) ...
Setting up python3.10-distutils-bogus (1.0) ...</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> install python3.10-venv</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Reading package lists...
Building dependency tree...
Reading state information...
python3.10-venv is already the newest version (3.10.10-2).
0 upgraded, 0 newly installed, 0 to remove and 4 not upgraded.</code></pre>
</div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>Debian package dependencies: packages that are required for a specific package to install and function properly</li>
<li>python3.11: the default version of Python now used in “bookworm” the latest Debian testing release, and “sid” (unstable))</li>
<li>python3.10-venv: A package that provides the “venv” module for Python 3.10, which is used to create Python virtual environments.</li>
<li>python3.10-distutils: a module in Python 3.10 that provides tools for building and installing Python modules and packages</li>
<li>equivs-build: a tool for creating Debian packages that provide empty or dummy packages to satisfy dependencies</li>
<li>dpkg-buildpackage: a tool for building Debian packages from source code</li>
<li>broken packages: Packages that cannot be installed due to missing dependencies or conflicts with other packages.</li>
<li>Torch: A popular machine learning library, which is not compatible with Python 3.11 yet.</li>
<li>Python 3.10: A version of Python that is compatible with Torch.</li>
<li>Maintainer: The person or organization responsible for maintaining a package in the Debian package repository.</li>
<li>Provides: A field in a Debian package control file that specifies the name of a package that the current package provides. This can be used to satisfy dependencies of other packages that require the provided package.</li>
</ul>
</details>
</section>
<section id="old-and-alpha-versions-of-python-from-deadsnakes" class="level3">
<h3 class="anchored" data-anchor-id="old-and-alpha-versions-of-python-from-deadsnakes">Old and alpha versions of Python, from deadsnakes</h3>
<p>I’m not actually using these alternative Python packages for AI at the moment.</p>
<p>However, it’s often useful to be able to use different versions of Python, so it’s an important part of my setup.</p>
<ul>
<li>Python 3.11 is the new default version for Debian.</li>
<li>Python 3.10 is still available in Debian, it’s the one we need to use.</li>
<li>I have Python 2.7 left over from a previous Debian release.</li>
<li>I installed 3.7, 3.8, 3.9 and 3.12 from deadsnakes.</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> jammy python3.7-venv python3.8-venv python3.9-venv</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>python3.7-venv is already the newest version (3.7.16-1+jammy1).
python3.8-venv is already the newest version (3.8.16-1+jammy1).
python3.9-venv is already the newest version (3.9.16-1+jammy1).
0 upgraded, 0 newly installed, 0 to remove and 4 not upgraded.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb32-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> jammy python3.12-venv</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>python3.12-venv is already the newest version (3.12.0~a5-1+jammy2).
0 upgraded, 0 newly installed, 0 to remove and 4 not upgraded.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb34-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt</span> policy python2<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span></span>
<span id="cb34-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span> 7 12<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt</span> policy python3.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$v</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">done</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>python2:
  Installed: 2.7.18-3
  Candidate: 2.7.18-3
  Version table:
 *** 2.7.18-3 100
        100 /var/lib/dpkg/status

python3.7:
  Installed: 3.7.16-1+jammy1
  Candidate: 3.7.16-1+jammy1
  Version table:
 *** 3.7.16-1+jammy1 100
         80 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu jammy/main amd64 Packages
        100 /var/lib/dpkg/status

python3.8:
  Installed: 3.8.16-1+jammy1
  Candidate: 3.8.16-1+jammy1
  Version table:
 *** 3.8.16-1+jammy1 100
         80 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu jammy/main amd64 Packages
        100 /var/lib/dpkg/status

python3.9:
  Installed: 3.9.16-1+jammy1
  Candidate: 3.9.16-1+jammy1
  Version table:
 *** 3.9.16-1+jammy1 100
         80 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu jammy/main amd64 Packages
        100 /var/lib/dpkg/status

python3.10:
  Installed: 3.10.10-2
  Candidate: 3.10.10-2
  Version table:
 *** 3.10.10-2 100
         90 http://deb.debian.org/debian sid/main amd64 Packages
        100 /var/lib/dpkg/status

python3.11:
  Installed: 3.11.2-4
  Candidate: 3.11.2-4
  Version table:
 *** 3.11.2-4 990
        990 http://deb.debian.org/debian bookworm/main amd64 Packages
         90 http://deb.debian.org/debian sid/main amd64 Packages
        100 /var/lib/dpkg/status
     3.11.2-1+jammy1 80
         80 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu jammy/main amd64 Packages

python3.12:
  Installed: 3.12.0~a5-1+jammy2
  Candidate: 3.12.0~a5-1+jammy2
  Version table:
 *** 3.12.0~a5-1+jammy2 100
         80 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu jammy/main amd64 Packages
        100 /var/lib/dpkg/status
</code></pre>
</div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>deadsnakes PPA: A Personal Package Archive (PPA) containing various versions of Python packages, maintained by the deadsnakes team on Launchpad.</li>
<li>Python 3.11: The new default version of Python for Debian, which is not yet compatible with Torch.</li>
<li>Python 3.10: A compatible version of Python that is still available in Debian and needed to use Torch.</li>
<li>Python 2.7: A legacy version of Python that I had installed from a previous Debian release.</li>
<li>Python 3.7, 3.8, 3.9, 3.12: Alternative versions of Python that I installed from the deadsnakes PPA; not strictly needed for most AI work.</li>
</ul>
</details>
</section>
<section id="nvidia-cuda" class="level3">
<h3 class="anchored" data-anchor-id="nvidia-cuda">NVIDIA CUDA</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb36-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> install cuda=12.0.1-1 cuda-drivers=525.85.12-1 cuda-11-7 cuda-11-8</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>cuda is already the newest version (12.0.1-1).
cuda-drivers is already the newest version (525.85.12-1).
cuda-11-7 is already the newest version (11.7.1-1).
cuda-11-8 is already the newest version (11.8.0-1).
0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.</code></pre>
</div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>NVIDIA CUDA: A parallel computing platform and programming model developed by NVIDIA for general computing on GPUs (graphics processing units).</li>
<li>CUDA drivers: Software components that enable communication between the CUDA runtime and the hardware.</li>
<li>CUDA 11-7, CUDA 11-8 and CUDA 12-0: Different versions of the CUDA toolkit that are compatible with different GPU architectures.</li>
</ul>
</details>
</section>
<section id="nvidia-container-runtime" class="level3">
<h3 class="anchored" data-anchor-id="nvidia-container-runtime">NVIDIA Container Runtime</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb38-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> install nvidia-container-runtime</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>nvidia-container-runtime is already the newest version (3.12.0-1).
0 upgraded, 0 newly installed, 0 to remove and 4 not upgraded.</code></pre>
</div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>NVIDIA Container Runtime: An open-source container runtime that enables the use of GPUs within containers, allowing applications to leverage the power of NVIDIA GPUs while maintaining the flexibility and portability of containerization. It is designed to work with Docker and other container engines and is optimized for use with NVIDIA GPUs.</li>
<li>Docker: A popular platform for developing, deploying, and running applications in containers. It provides a way to package an application and its dependencies into a single container that can be easily moved between environments.</li>
<li>GPU: Short for Graphics Processing Unit, a specialized processor designed to accelerate the rendering of images and video. In recent years, GPUs have become increasingly popular for running compute-intensive workloads, such as machine learning and scientific simulations.</li>
</ul>
</details>
</section>
<section id="nvidia-cudnn" class="level3">
<h3 class="anchored" data-anchor-id="nvidia-cudnn">NVIDIA cuDNN</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb40-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> install libcudnn8-dev</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>libcudnn8-dev is already the newest version (8.8.0.121-1+cuda12.0).
0 upgraded, 0 newly installed, 0 to remove and 4 not upgraded.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb42-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> install /var/cudnn-local-repo-ubuntu2204-8.6.0.163/libcudnn8-samples_8.6.0.163-1+cuda11.8_amd64.deb</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>libcudnn8-samples is already the newest version (8.6.0.163-1+cuda11.8).
0 upgraded, 0 newly installed, 0 to remove and 4 not upgraded.</code></pre>
</div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>NVIDIA cuDNN: A GPU-accelerated library for deep neural networks that is used to improve training and inference performance.</li>
<li>libcudnn8-dev: A package that provides the development files needed to compile software that uses NVIDIA cuDNN.</li>
<li>libcudnn8-samples: A package that contains sample code and programs that demonstrate how to use NVIDIA cuDNN in applications.</li>
</ul>
</details>
</section>
<section id="nvidia-tensorrt" class="level3">
<h3 class="anchored" data-anchor-id="nvidia-tensorrt">NVIDIA TensorRT</h3>
<p>NVIDIA TensorRT is an inference accelerator for deep learning models. It optimizes and deploys trained neural networks for inferencing on NVIDIA GPUs. In order to use TensorRT, the python3-libnvinfer package needs to be installed.</p>
<p>Unfortunately, this package has a dependency issue, it requires a version of Python less than 3.11 for the package to work, but I couldn’t downgrade the system’s Python version. To resolve this issue, I modified the package to depend on the <code>python3.10</code> package instead of <code>python3 &lt; 3.11</code>. I did this by copying the package to a local directory, unpacking it, modifying the dependency information, and repacking it. After this, I was able to successfully install the modified package and its development version using the dpkg command.</p>
<p>Finally, I was able to install the main <code>tensorrt</code> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> install python3-libnvinfer-dev</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Reading package lists...
Building dependency tree...
Reading state information...
Some packages could not be installed. This may mean that you have
requested an impossible situation or if you are using the unstable
distribution that some required packages have not yet been created
or been moved out of Incoming.
The following information may help to resolve the situation:

The following packages have unmet dependencies:
 python3-libnvinfer : Depends: python3 (&lt; 3.11) but 3.11.2-1 is to be installed
E: Unable to correct problems, you have held broken packages.</code></pre>
</div>
<div class="cell-output cell-output-error">
<pre><code>: 100</code></pre>
</div>
</div>
<p>I’d like to install it as a python3.10 library at least, but it is demanding that the system Python version, i.e.&nbsp;the version of Debian’s python3 package, should be less than 3.11, and I don’t want to try to change that. So I’ll adjust this <code>python3-libnvinfer</code> package to depend on the <code>python3.10</code> package instead of <code>python3 &lt; 3.11</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb47-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /var/nv-tensorrt-local-repo-ubuntu2204-8.5.3-cuda-11.8</span>
<span id="cb47-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span> python3-libnvinfer<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>python3-libnvinfer_8.5.3-1+cuda11.8_amd64.deb
python3-libnvinfer-dev_8.5.3-1+cuda11.8_amd64.deb</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb49-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cp</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> python3-libnvinfer<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> ~/soft-ai/</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>'python3-libnvinfer_8.5.3-1+cuda11.8_amd64.deb' -&gt; '/home/sam/soft-ai/python3-libnvinfer_8.5.3-1+cuda11.8_amd64.deb'
'python3-libnvinfer-dev_8.5.3-1+cuda11.8_amd64.deb' -&gt; '/home/sam/soft-ai/python3-libnvinfer-dev_8.5.3-1+cuda11.8_amd64.deb'</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb51-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/soft-ai</span>
<span id="cb51-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> rm <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-rf</span> unpacked</span>
<span id="cb51-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dpkg-deb</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> python3-libnvinfer_8.5.3-1+cuda11.8_amd64.deb unpacked</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb52-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> Depends unpacked/DEBIAN/control</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Depends: python3 (&gt;= 3.10), python3 (&lt;&lt; 3.11), libnvinfer8 (= 8.5.3-1+cuda11.8), libnvinfer-plugin8 (= 8.5.3-1+cuda11.8), libnvparsers8 (= 8.5.3-1+cuda11.8), libnvonnxparsers8 (= 8.5.3-1+cuda11.8)</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb54-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s/python3 (&gt;= 3.10), python3 (&lt;&lt; 3.11), /python3.10, /'</span> unpacked/DEBIAN/control</span>
<span id="cb54-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> Depends unpacked/DEBIAN/control</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Depends: python3.10, libnvinfer8 (= 8.5.3-1+cuda11.8), libnvinfer-plugin8 (= 8.5.3-1+cuda11.8), libnvparsers8 (= 8.5.3-1+cuda11.8), libnvonnxparsers8 (= 8.5.3-1+cuda11.8)</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb56-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dpkg-deb</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> unpacked python3-libnvinfer_8.5.3-1+cuda11.8_amd64_fixed.deb</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>dpkg-deb: building package 'python3-libnvinfer' in 'python3-libnvinfer_8.5.3-1+cuda11.8_amd64_fixed.deb'.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb58-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> dpkg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> ./python3-libnvinfer_8.5.3-1+cuda11.8_amd64_fixed.deb ./python3-libnvinfer-dev_8.5.3-1+cuda11.8_amd64.deb</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Selecting previously unselected package python3-libnvinfer.
(Reading database ... 1157567 files and directories currently installed.)
Preparing to unpack .../python3-libnvinfer_8.5.3-1+cuda11.8_amd64_fixed.deb ...
Unpacking python3-libnvinfer (8.5.3-1+cuda11.8) ...
Selecting previously unselected package python3-libnvinfer-dev.
Preparing to unpack .../python3-libnvinfer-dev_8.5.3-1+cuda11.8_amd64.deb ...
Unpacking python3-libnvinfer-dev (8.5.3-1+cuda11.8) ...
Setting up python3-libnvinfer (8.5.3-1+cuda11.8) ...
Setting up python3-libnvinfer-dev (8.5.3-1+cuda11.8) ...</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb60-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> install tensorrt</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tensorrt is already the newest version (8.5.3.1-1+cuda11.8).
0 upgraded, 0 newly installed, 0 to remove and 4 not upgraded.</code></pre>
</div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>NVIDIA TensorRT: An inference accelerator for deep learning models that optimizes and deploys trained neural networks for inferencing on NVIDIA GPUs.</li>
<li>python3-libnvinfer package: A package required to use TensorRT but has a dependency issue with the system’s Python version.</li>
<li>Dependency issue: A problem that arises when a software package requires certain libraries or packages to run, and those libraries or packages are either not installed or not compatible with the system.</li>
<li>dpkg command: A command used to install Debian packages.</li>
</ul>
</details>
</section>
</section>
<section id="install-rust" class="level2">
<h2 class="anchored" data-anchor-id="install-rust">Install Rust</h2>
<p>Some Python modules now depend on Rust to build. Also, I wanted to build Anki from source. I decided to install Rust system-wide, in <code>/opt/rust</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb62-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /tmp</span>
<span id="cb62-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--proto</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'=https'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--tlsv1.2</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sSf</span> https://sh.rustup.rs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> install_rust.sh</span>
<span id="cb62-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> RUSTUP_HOME=/opt/rust CARGO_HOME=/opt/rust sh ./install_rust.sh <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-modify-path</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb63-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> /opt/rust/env</span>
<span id="cb63-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustup</span> default stable</span></code></pre></div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>Rust: A systems programming language that is known for its speed, reliability, and memory safety features. It is often used for developing web browsers, operating systems, and game engines, and has gained popularity in the field of machine learning for its ease of integration with Python.</li>
<li>rustup: A command-line tool for managing Rust installations and its various components, such as different toolchains and target platforms.</li>
<li>CARGO_HOME: An environment variable used by Rust to specify the directory where Cargo, the package manager for Rust, stores its configuration and package cache.</li>
<li>RUSTUP_HOME: An environment variable used by Rust to specify the directory where rustup stores its configuration and installed toolchains.</li>
<li>Anki: a popular open-source flashcard application designed to help users learn and memorize information efficiently. It allows users to create digital flashcards containing text, images, audio, and video, and use various study techniques such as spaced repetition to optimize learning and retention. Anki is available for Windows, macOS, Linux, Android, and iOS platforms.</li>
</ul>
</details>
</section>
<section id="python-environments" class="level2">
<h2 class="anchored" data-anchor-id="python-environments">Python environments</h2>
<p>I’m going to add Python venvs under <code>/opt/venvs</code>, and use hard linking to share large files between them.</p>
<table class="table">
<colgroup>
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
</colgroup>
<thead>
<tr class="header">
<th>Folder</th>
<th>Depends</th>
<th>Uses</th>
<th>Purpose</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>python3.10-ai</td>
<td>Debian’s python3.10</td>
<td>torch stable</td>
<td>AI development</td>
</tr>
<tr class="even">
<td>python3.10-webui</td>
<td>python3.10-ai</td>
<td>torch stable</td>
<td>stable-diffusion-webui</td>
</tr>
</tbody>
</table>
<section id="the-base-venv-python3.10-ai" class="level3">
<h3 class="anchored" data-anchor-id="the-base-venv-python3.10-ai">The base venv python3.10-ai</h3>
<p>This venv is a base environment for AI development, containing various packages and libraries useful for working with deep learning models and related tasks. These include popular libraries like fastai, PyTorch, TensorFlow, scikit-learn, and NumPy, as well as some more specialized tools. The different packages are described in the glossary for this section.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb64-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /opt/venvs</span>
<span id="cb64-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /opt/venvs</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb65-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> python3.10-ai</span>
<span id="cb65-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python3.10</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> venv python3.10-ai/venv</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb66-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">printf</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%s\n"</span> torch pipdeptree torchvision torchaudio tensorflow <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb66-2">    jupyter jupyterlab ipywidgets bash_kernel jupyter-c-kernel nbdev fastai <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb66-3">    pandas matplotlib scipy scikit-learn scikit-image gradio onnx <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb66-4">    huggingface_hub transformers diffusers accelerate timm safetensors <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb66-5">    numba fastbook <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> python3.10-ai/require.txt</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb67-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb67-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span></span>
<span id="cb67-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> /opt/venvs/python3.10-ai/venv/bin/activate</span>
<span id="cb67-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> python3.10-ai/require.txt</span>
<span id="cb67-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> bash_kernel.install</span>
<span id="cb67-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">install_c_kernel</span></span>
<span id="cb67-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.
open-clip-torch 2.15.0 requires protobuf==3.20.*, but you have protobuf 3.19.6 which is incompatible.
Installing IPython kernel spec
Installing IPython kernel spec
/opt/venvs/python3.10-ai/venv/bin/install_c_kernel:32: DeprecationWarning: replace is ignored. Installing a kernelspec always replaces an existing installation
  KernelSpecManager().install_kernel_spec(td, 'c', user=user, replace=True, prefix=prefix)</code></pre>
</div>
</div>
<p>Upgrade to the latest ipywidgets. This supposedly conflicts with fastbook, but is needed for Jupyter Lab.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb69-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb69-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span></span>
<span id="cb69-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> /opt/venvs/python3.10-ai/venv/bin/activate</span>
<span id="cb69-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> ipywidgets</span>
<span id="cb69-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jupyter</span> nbextension enable <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--py</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--sys-prefix</span> widgetsnbextension</span>
<span id="cb69-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.
fastbook 0.0.29 requires ipywidgets&lt;8, but you have ipywidgets 8.0.4 which is incompatible.
Enabling notebook extension jupyter-js-widgets/extension...
      - Validating: OK</code></pre>
</div>
</div>
<p>The pydoc command doesn’t seem to be installed properly in venvs, so I added it:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb71-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;'END'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> python3.10-ai/venv/bin/pydoc</span>
<span id="cb71-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">#!/bin/sh</span></span>
<span id="cb71-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">python -m pydoc "$@"</span></span>
<span id="cb71-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">END</span></span>
<span id="cb71-5"></span>
<span id="cb71-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> +x python3.10-ai/venv/bin/pydoc</span></code></pre></div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>Python venvs: Virtual environments created by the Python venv module that allow users to create isolated Python environments with their own packages, versions, and configurations.</li>
<li>hard linking: A method of creating a new file that shares the same content as an existing file without duplicating it, saving storage space and reducing the time needed to create a copy.</li>
<li>torch: PyTorch, an open-source machine learning framework for building and training neural networks.</li>
<li>torchvision: A package that provides access to popular datasets, model architectures, and image transformations for PyTorch.</li>
<li>torchaudio: A package that provides audio processing functionalities for PyTorch, such as loading and decoding audio files, applying transforms, and computing spectrograms.</li>
<li>tensorflow: An open-source machine learning framework developed by Google for building and training neural networks.</li>
<li>jupyter: Jupyter Notebook, an open-source web application that allows users to create and share documents containing live code, equations, visualizations, and narrative text.</li>
<li>jupyterlab: The next-generation web-based user interface for Jupyter Notebook, featuring a more modern and flexible interface, multiple panes, and support for Jupyter extensions.</li>
<li>ipywidgets: A library that provides interactive HTML widgets for Jupyter Notebook and JupyterLab, enabling users to create sliders, dropdowns, buttons, and other graphical controls that can be used to modify code outputs and visualizations.</li>
<li>bash_kernel: A Jupyter kernel that allows users to run Bash commands and scripts in Jupyter Notebook and JupyterLab.</li>
<li>jupyter-c-kernel: A Jupyter kernel that allows users to run C code in Jupyter Notebook and JupyterLab.</li>
<li>nbdev: A library that allows users to create Python modules from Jupyter Notebooks, making it easier to develop, test, and publish code.</li>
<li>fastai: An open-source library built on top of PyTorch that provides high-level abstractions for training and deploying machine learning models, including computer vision, natural language processing, and tabular data analysis.</li>
<li>pandas: A data analysis library for Python that provides powerful data structures and tools for manipulating and analyzing data.</li>
<li>matplotlib: A plotting library for Python that provides a variety of visualizations, including line plots, scatter plots, bar charts, histograms, and more.</li>
<li>scipy: A library for scientific computing in Python that provides a wide range of mathematical algorithms, including optimization, integration, interpolation, signal processing, and more.</li>
<li>scikit-learn: A machine learning library for Python that provides a variety of supervised and unsupervised learning algorithms, including regression, classification, clustering, and dimensionality reduction.</li>
<li>scikit-image: An image processing library for Python that provides a variety of algorithms for image enhancement, filtering, segmentation, and feature extraction.</li>
<li>gradio: An open-source library that allows users to quickly create custom web interfaces for machine learning models, enabling users to interact with models using sliders, dropdowns, text boxes, and other controls.</li>
<li>onnx: Open Neural Network Exchange, an open-source format for representing machine learning models that allows interoperability between different frameworks and platforms.</li>
<li>huggingface_hub: A library that provides access to a wide range of pre-trained machine learning models for natural language processing, computer vision, and other tasks, hosted on the Hugging Face Hub.</li>
<li>transformers: A library that provides state-of-the-art natural language processing models for tasks such as sentiment analysis, question answering, and language translation, based on transformer architectures.</li>
<li>diffusers: A library that provides a set of PyTorch modules for training diffusion models, a type of probabilistic generative model that can be used for tasks such as image synthesis, denoising, and inpainting.</li>
<li>pipdeptree: a command-line utility that displays the installed Python packages in the form of a dependency tree</li>
<li>Accelerate: a library that enables PyTorch code to run across any distributed configuration with just four lines of code</li>
<li>PyTorch Image Models (timm): a deep-learning library that includes a collection of state-of-the-art computer vision models, layers, utilities, optimizers, schedulers, data-loaders, augmentations, and training/validating scripts with the ability to reproduce ImageNet training results</li>
<li>Safetensors: a repository that implements a new simple format for storing tensors safely and efficiently, instead of using pickle</li>
<li>Numba: a high-performance Python compiler that translates Python functions to optimized machine code at runtime using the industry-standard LLVM compiler library; it offers a range of options for parallelizing Python code for CPUs and GPUs, often with only minor code changes</li>
<li>fastbook: the Fast.ai book published as Jupyter Notebooks, that covers deep learning using fastai and PyTorch</li>
</ul>
</details>
</section>
<section id="the-secondary-venv-python3.10-webui" class="level3">
<h3 class="anchored" data-anchor-id="the-secondary-venv-python3.10-webui">The secondary venv python3.10-webui</h3>
<p>This is a secondary Python venv called python3.10-webui. It will be used to support the stable-diffusion web user interface, and is based on the python3.10-ai venv. Hard linking will be used to share large files between the two venvs.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb72-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /opt/venvs</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb73-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> python3.10-webui</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb74-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> rm <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-rf</span> python3.10-webui/venv</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb75-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cp</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-al</span> python3.10-ai/venv python3.10-webui/venv</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb76-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">yes</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">venv_move</span> python3.10-webui/venv</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb77-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb77-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> python3.10-ai/require.txt ~/soft-ai/stable-diffusion-webui/requirements.txt </span>
<span id="cb77-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> fastapi==0.90.1</span>
<span id="cb77-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> python3.10-webui/require.txt</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb78-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb78-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span></span>
<span id="cb78-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> python3.10-webui/venv/bin/activate</span>
<span id="cb78-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> python3.10-webui/require.txt</span>
<span id="cb78-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb79" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb79-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ln</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> python3.10-ai/venv/bin/pydoc python3.10-webui/venv/bin/pydoc</span></code></pre></div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>hard linking: a file system feature that allows multiple files to share the same physical storage location on disk. Hard linking a file creates a new file that points to the same location as the original file. This can be used to save disk space and reduce redundancy in a file system.</li>
<li><a href="https://stackoverflow.com/a/67979710/218294">venv_move</a>: this is a Bash script that is used to move a Python virtual environment (venv) to a new location. The script takes one argument, which is the path to the venv directory that needs to be moved.</li>
</ul>
</details>
</section>
<section id="stable-diffusion-webui" class="level3">
<h3 class="anchored" data-anchor-id="stable-diffusion-webui">stable-diffusion-webui</h3>
<p>In this section, we will install the <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">automatic1111 stable-diffusion-webui app</a> and set up custom scripts to update and launch it. The stable-diffusion-webui app is a web user interface for the Stable Diffusion model, which is a deep learning model for image classification. The update script will allow us to easily update the app when new changes are pushed to the Git repository. The launch script will activate the correct virtual environment and launch the web user interface.</p>
<p>The app works without these custom scripts, but I wanted to allow for careful updates and custom launch options.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb80-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/soft-ai</span>
<span id="cb80-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-d</span> stable-diffusion-webui <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">||</span></span>
<span id="cb80-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone git@github.com:AUTOMATIC1111/stable-diffusion-webui.git</span>
<span id="cb80-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> stable-diffusion-webui</span></code></pre></div>
</div>
<section id="my-update-script" class="level4">
<h4 class="anchored" data-anchor-id="my-update-script">my update script</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb81" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb81-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> update</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>#!/bin/sh
set -e
. /opt/venvs/python3.10-webui/venv/bin/activate
git stash
git pull
git stash pop || true
pip install -r requirements.txt</code></pre>
</div>
</div>
</section>
<section id="my-launch-script" class="level4">
<h4 class="anchored" data-anchor-id="my-launch-script">my launch script</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb83" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb83-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> launch</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>#!/bin/bash
set -ae
. /opt/venvs/python3.10-webui/venv/bin/activate
cd "$(dirname "$(readlink -f "$0")")"
SAFETENSORS_FAST_GPU=1
COMMANDLINE_ARGS="--xformers --api $*"  # --no-half-vae
REQS_FILE="requirements.txt"
python launch.py</code></pre>
</div>
</div>
<p>Next, I launch the webui to install some extra requirements, and check that it works.</p>
<details>
<summary>
Glossary
</summary>
<ul>
<li>stable-diffusion-webui: A web user interface for the Stable Diffusion model, a deep learning model for image classification. The stable-diffusion-webui app is installed in this section, along with custom scripts for updating and launching it.</li>
<li>update script: A custom script for updating the stable-diffusion-webui app. The script activates the correct virtual environment and pulls changes from the Git repository, installs any new requirements, and restarts the app.</li>
<li>launch script: A custom script for launching the stable-diffusion-webui app. The script activates the correct virtual environment and sets some environment variables before running the launch.py script.</li>
<li>SAFETENSORS_FAST_GPU=1: an environment variable used with the Safetensors library in deep learning applications. Normally, models are loaded to the CPU and then moved to the GPU, which can involve an additional memory copy step. The “SAFETENSORS_FAST_GPU=1” option allows models to be loaded directly onto the GPU, bypassing the memory copy step and potentially improving performance. However, this option is untested and may not be suitable for all applications.</li>
<li>COMMANDLINE_ARGS: An environment variable used in the launch script to pass command line arguments to the launch.py script.</li>
<li>REQS_FILE: An environment variable used in the launch script to specify which requirements file should be used for the stable-diffusion-webui app.</li>
<li>requirements.txt file: a text file that lists the dependencies of a Python project. It contains a list of package names and optional version numbers that are required for the project to run. This file can be used by the pip package installer to automatically install all required packages and their dependencies, like this: <code>pip install -r requirements.txt</code></li>
</ul>
</details>
</section>
</section>
<section id="compare-the-two-venvs" class="level3">
<h3 class="anchored" data-anchor-id="compare-the-two-venvs">Compare the two venvs</h3>
<p>In this section, we compare the packages installed in the two Python virtual environments we created earlier. By running the “pip freeze” command in each venv and storing the output in a text file, we can then compare the contents of those files using the “comm” command. The resulting output shows the packages that are installed in one venv but not the other. We can use this information to ensure that both venvs have the necessary packages for our projects.</p>
<p>Running pip check in both venvs can help ensure that all packages are installed correctly and functioning properly. In the output, we see a package conflict related to the version of protobuf installed, but this does not seem to cause any issues in practice as the app still works.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb85" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb85-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /opt/venvs</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb86" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb86-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb86-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> python3.10-ai/venv/bin/activate</span>
<span id="cb86-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> freeze <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'^[#-]'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> python3.10-ai/freeze.txt</span>
<span id="cb86-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> check</span>
<span id="cb86-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>No broken requirements found.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb88" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb88-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb88-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> python3.10-webui/venv/bin/activate</span>
<span id="cb88-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> freeze <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'^[#-]'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> python3.10-webui/freeze.txt</span>
<span id="cb88-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> check</span>
<span id="cb88-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tensorflow 2.11.0 has requirement protobuf&lt;3.20,&gt;=3.9.2, but you have protobuf 3.20.0.</code></pre>
</div>
<div class="cell-output cell-output-error">
<pre><code>: 1</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb91" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb91-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">comm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-3</span> python3.10-ai/freeze.txt python3.10-webui/freeze.txt <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tee</span> comm.txt</span></code></pre></div>
</div>
<details>
<summary>
Glossary
</summary>
<p>pip freeze: A command used to output the names and versions of installed Python packages in the format required for a requirements.txt file. We use pip freeze to generate the requirements.txt files for both venvs so we can compare them.</p>
<p>pip check: A command in pip that checks the consistency of installed packages, verifying that all dependencies are met and all files are intact. It will report any issues or conflicts with installed packages, and can help identify packages that need to be updated or removed.</p>
<p>sort: A Unix utility used to sort the lines of a file alphabetically. We use the sort command to ensure that the lines in the requirements.txt files are in the same order, making it easier to compare them. The comm utility requires that it’s inputs are sorted.</p>
<p>comm: A Unix utility used to compare two files line by line. In this section, we use the comm command to compare the contents of two requirements.txt files and display the lines that are unique to each file.</p>
</details>
</section>
<section id="check-disk-usage-and-savings" class="level3">
<h3 class="anchored" data-anchor-id="check-disk-usage-and-savings">Check disk usage and savings</h3>
<p>In this section, we use the du tool to check the disk usage and savings of the base venv and webui venv. By using hard links, we can see that we are saving nearly 6GB of disk space. We use the du -sh command to show the size of each venv separately and du -csh command to show the total size of both venvs.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb92" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb92-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">du</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sh</span> ./python3.10-ai</span>
<span id="cb92-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">du</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sh</span> ./python3.10-webui</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>5.9G    ./python3.10-ai
6.2G    ./python3.10-webui</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb94" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb94-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">du</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-csh</span> ./python3.10-<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ai</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">webui}</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>5.9G    ./python3.10-ai
652M    ./python3.10-webui
6.6G    total</code></pre>
</div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>du: A command-line tool used to estimate file space usage in a file system. It can display the file size in human-readable format.</li>
<li>disk usage: The amount of disk space occupied by a file or directory in a file system.</li>
<li>hard links: A feature of the file system that allows multiple files to share the same data blocks on a storage device. Hard links allow a file to have multiple names in different directories or in the same directory.</li>
</ul>
</details>
</section>
<section id="save-the-setup-in-a-git-repo" class="level3">
<h3 class="anchored" data-anchor-id="save-the-setup-in-a-git-repo">Save the setup in a git repo</h3>
<p>In this section, we initialize a new Git repository to save our virtual environment setup. We create a “.gitignore” file to exclude the venvs from version control, add all files to the Git staging area, and commit the changes with a message. This allows us to easily track and version our venv setup and changes over time.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb96" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb96-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> init</span>
<span id="cb96-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> venv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> .gitignore</span>
<span id="cb96-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-A</span></span>
<span id="cb96-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'venvs'</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Reinitialized existing shared Git repository in /opt/venvs/.git/
[main 8fd5a24] venvs
 2 files changed, 15 insertions(+), 1 deletion(-)</code></pre>
</div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>Git: A version control system used for tracking changes to files and collaborating on projects.</li>
<li>Repository: A central location in which data is stored and managed.</li>
<li>.gitignore: A file used to exclude files and directories from being tracked by Git.</li>
<li>Staging area: A place where files are stored before they are committed to the repository.</li>
<li>Commit: A permanent record of changes to files in the repository, along with a message that describes the changes.</li>
</ul>
</details>
</section>
</section>
<section id="optional-extras" class="level1">
<h1>Optional extras</h1>
<section id="building-xformers" class="level2">
<h2 class="anchored" data-anchor-id="building-xformers">Building xformers</h2>
<p>If you need to build and install <code>xformers</code> from source, this is how to do it. It took nearly half an hour on a fast computer. I think that it didn’t build things in parallel. I used this with stable-diffusion-webui, when the binary packages of xformers weren’t working.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb98" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb98-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/soft-ai</span>
<span id="cb98-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-d</span> xformers <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">||</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/facebookresearch/xformers.git</span>
<span id="cb98-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> xformers</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb99" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb99-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> submodule update <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--init</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--recursive</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb100" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb100-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> pull</span>
<span id="cb100-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> submodule update <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--recursive</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Already up to date.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb102" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb102-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> setup.py clean <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--all</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>running clean
'build/lib.linux-x86_64-cpython-310' does not exist -- can't clean it
'build/bdist.linux-x86_64' does not exist -- can't clean it
'build/scripts-3.10' does not exist -- can't clean it</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb104" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb104-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$VIRTUAL_ENV</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>/opt/venvs/python3.10-ai/venv</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb106" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb106-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CUDA_HOME</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/usr/local/cuda-11.7"</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CC</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gcc-11 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CXX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>g++-11 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">MAKEFLAGS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-j</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nproc</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb106-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">time</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> . <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tee</span> build.log</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Obtaining file:///home/sam/soft-ai/xformers
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: numpy in /opt/venvs/python3.10-ai/venv/lib/python3.10/site-packages (from xformers==0.0.17+b89a493.d20230303) (1.23.5)
Requirement already satisfied: pyre-extensions==0.0.23 in /opt/venvs/python3.10-ai/venv/lib/python3.10/site-packages (from xformers==0.0.17+b89a493.d20230303) (0.0.23)
Requirement already satisfied: torch&gt;=1.12 in /opt/venvs/python3.10-ai/venv/lib/python3.10/site-packages (from xformers==0.0.17+b89a493.d20230303) (1.13.1)
Requirement already satisfied: typing-extensions in /opt/venvs/python3.10-ai/venv/lib/python3.10/site-packages (from pyre-extensions==0.0.23-&gt;xformers==0.0.17+b89a493.d20230303) (4.5.0)
Requirement already satisfied: typing-inspect in /opt/venvs/python3.10-ai/venv/lib/python3.10/site-packages (from pyre-extensions==0.0.23-&gt;xformers==0.0.17+b89a493.d20230303) (0.8.0)
Requirement already satisfied: nvidia-cuda-nvrtc-cu11==11.7.99 in /opt/venvs/python3.10-ai/venv/lib/python3.10/site-packages (from torch&gt;=1.12-&gt;xformers==0.0.17+b89a493.d20230303) (11.7.99)
Requirement already satisfied: nvidia-cudnn-cu11==8.5.0.96 in /opt/venvs/python3.10-ai/venv/lib/python3.10/site-packages (from torch&gt;=1.12-&gt;xformers==0.0.17+b89a493.d20230303) (8.5.0.96)
Requirement already satisfied: nvidia-cuda-runtime-cu11==11.7.99 in /opt/venvs/python3.10-ai/venv/lib/python3.10/site-packages (from torch&gt;=1.12-&gt;xformers==0.0.17+b89a493.d20230303) (11.7.99)
Requirement already satisfied: nvidia-cublas-cu11==11.10.3.66 in /opt/venvs/python3.10-ai/venv/lib/python3.10/site-packages (from torch&gt;=1.12-&gt;xformers==0.0.17+b89a493.d20230303) (11.10.3.66)
Requirement already satisfied: setuptools in /opt/venvs/python3.10-ai/venv/lib/python3.10/site-packages (from nvidia-cublas-cu11==11.10.3.66-&gt;torch&gt;=1.12-&gt;xformers==0.0.17+b89a493.d20230303) (66.1.1)
Requirement already satisfied: wheel in /opt/venvs/python3.10-ai/venv/lib/python3.10/site-packages (from nvidia-cublas-cu11==11.10.3.66-&gt;torch&gt;=1.12-&gt;xformers==0.0.17+b89a493.d20230303) (0.38.4)
Requirement already satisfied: mypy_extensions&gt;=0.3.0 in /opt/venvs/python3.10-ai/venv/lib/python3.10/site-packages (from typing-inspect-&gt;pyre-extensions==0.0.23-&gt;xformers==0.0.17+b89a493.d20230303) (1.0.0)
Installing collected packages: xformers
  Running setup.py develop for xformers
Successfully installed xformers-0.0.17+b89a493.d20230303
1498.23user 47.47system 21:29.43elapsed 119%CPU (0avgtext+0avgdata 1777728maxresident)k
4848inputs+12701968outputs (64major+40118051minor)pagefaults 0swaps</code></pre>
</div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>xformers: a library for accelerating transformer-based models in PyTorch.</li>
<li>CUDA_HOME: an environment variable that specifies the path to the CUDA installation directory.</li>
<li>gcc-11 and g++-11: the GNU Compiler Collection version 11 for the C and C++ programming languages, respectively. Xformers won’t build with gcc-12, so we need to specify the older version.</li>
<li>nproc: a command that outputs the number of processing units available to the current process.</li>
<li>setup.py: a Python script that is used to package and distribute Python modules.</li>
<li>submodule: a feature in Git that allows a repository to contain another repository as a subdirectory.</li>
<li>tee: a command that reads standard input and writes it to both standard output and one or more files.</li>
<li>time: a command that displays the system time for a command to execute.</li>
</ul>
</details>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In this post, I described my journey of setting up a development environment for deep learning on Debian, and the challenges I faced while doing so. I went through various steps, such as setting up apt sources, installing required packages (including Python, NVIDIA CUDA, cuDNN, and TensorRT), installing Rust, and setting up Python virtual environments. I also described how I set up stable-diffusion-webui, a how I built Xformers from source.</p>
<p>I hope the post can be useful for anyone looking to set up a development environment for deep learning on Debian, if only as a cautionary tale of what not to do; and in particular I expect that this might be useful as a reference for myself in future.</p>


</section>

 ]]></description>
  <category>setup</category>
  <category>Debian</category>
  <category>fastai</category>
  <category>Python</category>
  <category>CUDA</category>
  <guid>https://sam.ucm.dev/blog/posts/setup/setup.html</guid>
  <pubDate>Thu, 02 Mar 2023 13:00:00 GMT</pubDate>
</item>
<item>
  <title>Graveyard of bad setup ideas</title>
  <link>https://sam.ucm.dev/blog/posts/deadends/deadends.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Here is a list of other things I tried for my Debian AI setup, which didn’t work out so well. They didn’t cause disasters for me, but they were dead-ends; they didn’t solve my setup problems. Here be dragons!</p>
</section>
<section id="allow-myself-to-install-packages-to-usrlocal" class="level2">
<h2 class="anchored" data-anchor-id="allow-myself-to-install-packages-to-usrlocal">Allow myself to install packages to /usr/local</h2>
<p>Since I wrote this section, Debian has modified their pip so that it refuses to install to <code>/usr/local</code>, unless we use the <code>--break-system-packages</code> flag.</p>
<p>It’s not safe to run <code>pip install -U</code> as root. It will merrily remove files from Debian-packaged Python modules under <code>/usr/lib</code>, and mess up the system. To avoid this, I changed permissions so that my regular user account can write to everything under <code>/usr/local</code> via the <code>staff</code> group. I do the same for <code>/opt</code> because I want to upgrade Rust from my own user ID also:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> adduser <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$USER</span> staff</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> chgrp <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> staff /usr/local /opt</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> chmod <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> g+w /usr/local /opt</span></code></pre></div>
</div>
<p>This is somewhat of a security concern, but if a bad guy gets a local shell it’s pretty much game over anyway. To make it safer, I could have used a different non-root account.</p>
<p>In order to upgrade a pip package where the same package was also installed in <code>/usr/lib</code> by dpkg, I need to use <code>pip -I -U packagename</code>. The <code>-I</code> flag tells it to ignore installed packages, i.e.&nbsp;don’t try to remove them. I only do that as needed for individual packages, when a normal upgrade fails.</p>
<p>This setup might upset Debian-packaged programs that depend on older versions of the Python libraries that I’ve upgraded. I haven’t noticed any problems like that yet.</p>
<p>If you try to downgrade a package, and if multiple versions of a package are accidentally installed under /usr/local/lib/python3.10 at that same time, it can get confused, so watch out for that. You might need to manually remove one of the versions.</p>
<details>
<summary>
Glossary
</summary>
<ul>
<li>pip: A package manager for Python packages that allows users to easily install, upgrade, and remove Python packages.</li>
<li>/usr/local: A directory on Unix-like systems where locally installed software is usually placed, separate from the operating system’s own packages.</li>
<li>Debian: A popular Linux distribution known for its stability and ease of use.</li>
<li>–break-system-packages: A flag used with pip to force installation of packages that conflict with system packages, even though this can cause problems.</li>
<li>root: The default administrative user in Unix-like operating systems, with full permissions to all system files and directories.</li>
<li>permissions: The settings that control who can access and modify files and directories on a computer.</li>
<li>staff group: A group on Unix-like systems that provides additional permissions to users who belong to it.</li>
<li>chgrp: A Unix command used to change the group ownership of a file or directory.</li>
<li>chmod: A Unix command used to change the permissions of a file or directory.</li>
<li>security concern: A potential risk to the security of a system, data, or user privacy.</li>
<li>dpkg: A package manager for Debian-based Linux distributions.</li>
<li>upgrade: The process of installing a newer version of a software package over an existing version to get new features or bug fixes.</li>
<li>downgrade: The process of installing an older version of a software package over a newer version.</li>
</ul>
</details>
</section>
<section id="enable-switching-the-system-python-version" class="level2">
<h2 class="anchored" data-anchor-id="enable-switching-the-system-python-version">Enable switching the system python version</h2>
<p>The default Python version for Debian “testing” at time of writing is Python 3.11, however we don’t have a stable release of pytorch for Python 3.11 yet.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python3.11</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--break-system-packages</span> torchvision</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ERROR: Could not find a version that satisfies the requirement torchvision (from versions: 0.1.6, 0.1.7, 0.1.8, 0.1.9, 0.2.0, 0.2.1, 0.2.2, 0.2.2.post2, 0.2.2.post3)
ERROR: No matching distribution found for torchvision
</code></pre>
</div>
<div class="cell-output cell-output-error">
<pre><code>: 1</code></pre>
</div>
</div>
<p>I decided to try switch the system Python version back to 3.10. This is not recommended, but at least it’s easy to undo!</p>
<p>Anyway, let’s enable switching the system Python version back to 3.10, using <code>update-alternatives</code>.</p>
<p>First, note that we can undo this change later, if necessary, as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> update-alternatives <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--remove-all</span> python3</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> update-alternatives <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--remove-all</span> pydoc3</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ln <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sf</span> python3.11 /usr/bin/python3</span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ln <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sf</span> pydoc3.11 /usr/bin/pydoc3</span></code></pre></div>
</div>
<p>We can set up alternatives for <code>python3</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> update-alternatives <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--install</span> /usr/bin/python3 python3 /usr/bin/python3.11 11</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> update-alternatives <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--install</span> /usr/bin/python3 python3 /usr/bin/python3.10 10</span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sudo update-alternatives --set python3 /usr/bin/python3.10</span></span></code></pre></div>
</div>
<p>and do the same for <code>pydoc3</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> update-alternatives <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--install</span> /usr/bin/pydoc3 pydoc3 /usr/bin/pydoc3.11 11</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> update-alternatives <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--install</span> /usr/bin/pydoc3 pydoc3 /usr/bin/pydoc3.10 10</span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sudo update-alternatives --set pydoc3 /usr/bin/pydoc3.10</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">update-alternatives</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--list</span> python3</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">update-alternatives</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--list</span> pydoc3</span></code></pre></div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>torchvision: a PyTorch library containing popular datasets, model architectures, and common image transformations for computer vision.</li>
<li>update-alternatives: a Debian/Ubuntu tool for managing alternative versions of executables, such as Python or Pydoc.</li>
<li>system Python: the version of Python installed on a Debian/Ubuntu system and used by default for system-level processes.</li>
<li>break-system-packages: a pip option that allows installation of packages that may break other system packages.</li>
<li>ln -s: a command for creating symbolic links between files.</li>
<li>pydoc: a Python documentation tool.</li>
</ul>
</details>
</section>
<section id="install-nightly-torch-with-python-3.11" class="level2">
<h2 class="anchored" data-anchor-id="install-nightly-torch-with-python-3.11">Install nightly torch with Python 3.11</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> fastbook jupyter jupyterlab tensorflow ipywidgets</span></code></pre></div>
</div>
<p>At some point I saw a warning about compatibility between fastai and torch.</p>
<pre><code>fastai 2.7.11 has requirement torch&lt;1.14,&gt;=1.7, but you have torch 2.0.0.dev20230220+cu117</code></pre>
<p>I decided to try using it with nightly torch anyway:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--pre</span> torch torchvision torchaudio <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--index-url</span> https://download.pytorch.org/whl/nightly/cu117</span></code></pre></div>
</div>
<p>Extra packages: nbdev, and kernels for bash and C:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> nbdev bash_kernel jupyter-c-kernel</span></code></pre></div>
</div>
</section>
<section id="use-the-old-pip-resolver-if-necessary" class="level2">
<h2 class="anchored" data-anchor-id="use-the-old-pip-resolver-if-necessary">Use the old pip resolver, if necessary</h2>
<p>As of pip 20.3, a new resolver has been introduced, which doesn’t always work. As of pip 21.0 the old working resolver is unsupported and slated for removal dependent on pip team resources.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>pip 23.0 from /usr/lib/python3/dist-packages/pip (python 3.11)</code></pre>
</div>
</div>
<p>With this version of pip, it’s possible to use the “legacy resolver” with the following option:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> requirements.txt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--use-deprecated</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>legacy-resolver</span></code></pre></div>
</div>
<p>Or, I can downgrade pip to version 20.2.4, before they switched to the new resolver.</p>
<p>Refer to https://stackoverflow.com/a/67408694 for more info.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install pip==20.2.4</span></code></pre></div>
</div>
<details>
<summary>
Glossary
</summary>
<ul>
<li>resolver: Part of pip responsible for resolving package dependencies and deciding which versions to install.</li>
<li>legacy resolver: The older version of pip’s resolver algorithm, which is still supported in some versions of pip but has been deprecated and is no longer the default.</li>
</ul>
</details>
</section>
<section id="pypi-does-not-include-onnxruntime-for-python3.11" class="level2">
<h2 class="anchored" data-anchor-id="pypi-does-not-include-onnxruntime-for-python3.11">PyPI does not include onnxruntime for python3.11</h2>
<p>At one point I was hoping to use python3.11 rather than python3.10. I attempted to build onnxruntime from source, but didn’t persevere with it.</p>
<details>
<summary>
Glossary
</summary>
<ul>
<li>PyPI: PyPI (Python Package Index) is a repository of software for the Python programming language. It contains packages of software developed by various authors that are published and shared with the wider Python community.</li>
<li>onnxruntime: onnxruntime is an open-source engine for executing machine learning models that are defined in the Open Neural Network Exchange (ONNX) format. It provides high performance and supports multiple platforms, including CPU, GPU, and FPGA.</li>
<li>Source code is the human-readable code that programmers write to create computer programs. It needs to be compiled or interpreted to run on a computer.</li>
<li>Build: Building refers to the process of compiling or otherwise preparing source code for execution on a specific platform or architecture.</li>
<li>Open Neural Network Exchange (ONNX): ONNX is an open-source format for representing machine learning models. It is designed to be interoperable across different frameworks and platforms, allowing models to be easily transferred and executed on different hardware.</li>
<li>FPGA: FPGA stands for Field-Programmable Gate Array. It is an integrated circuit that can be programmed to perform a wide range of computing tasks, including machine learning inference.</li>
</ul>
</details>
</section>
<section id="untold-difficulties" class="level2">
<h2 class="anchored" data-anchor-id="untold-difficulties">Untold difficulties! 😭</h2>
<p>I haven’t described all of the various problems I had to deal with, due to trying various hacky approaches rather than venvs. There were plenty of problems! I guess I learned something from the experience, anyway. I wish Lambda Stack worked on Debian, not only Ubuntu, it would have been a lot easier than this!</p>
<details>
<summary>
Glossary
</summary>
<ul>
<li>hacky approaches: Informal or unconventional methods used to solve a problem or complete a task, often using shortcuts or workarounds instead of following established best practices.</li>
<li>Lambda Stack: A software stack from Lambda Labs that provides pre-built binaries of deep learning frameworks and other software packages for Ubuntu-based systems.</li>
</ul>
</details>


</section>

 ]]></description>
  <category>bad</category>
  <category>setup</category>
  <category>Debian</category>
  <guid>https://sam.ucm.dev/blog/posts/deadends/deadends.html</guid>
  <pubDate>Thu, 02 Mar 2023 13:00:00 GMT</pubDate>
</item>
<item>
  <title>Keyboard shortcuts for Jupyter Lab</title>
  <link>https://sam.ucm.dev/blog/posts/shortcuts/shortcuts.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Keyboard shortcuts are a great way to speed up your workflow in Jupyter Lab, but sometimes the default shortcuts don’t quite fit your needs. In this short post, I’ll show you how to add four new keyboard shortcuts to Jupyter Lab that I find useful.</p>
<table class="table">
<thead>
<tr class="header">
<th>shortcut</th>
<th>function</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Ctrl Shift Enter</td>
<td>Run All Above Selected Cell</td>
</tr>
<tr class="even">
<td>Alt L</td>
<td>Clear All Outputs</td>
</tr>
<tr class="odd">
<td>Alt M</td>
<td>Render All Markdown Cells</td>
</tr>
<tr class="even">
<td>Shift V</td>
<td>Paste Cells Above</td>
</tr>
</tbody>
</table>
</section>
<section id="editing-the-settings" class="level2">
<h2 class="anchored" data-anchor-id="editing-the-settings">Editing the settings</h2>
<p>Go to Settings → Advanced Settings Editor → JSON Settings Editor</p>
<p>Then add these shortcuts at the end of the file.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb1-1">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-2">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"args"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{},</span></span>
<span id="cb1-3">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"command"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notebook:run-all-above"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-4">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"keys"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb1-5">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ctrl Shift Enter"</span></span>
<span id="cb1-6">            <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-7">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"selector"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".jp-Notebook:focus"</span></span>
<span id="cb1-8">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-9">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-10">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"args"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{},</span></span>
<span id="cb1-11">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"command"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notebook:clear-all-cell-outputs"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-12">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"keys"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb1-13">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alt L"</span></span>
<span id="cb1-14">            <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-15">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"selector"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".jp-Notebook:focus"</span></span>
<span id="cb1-16">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-17">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-18">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"args"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{},</span></span>
<span id="cb1-19">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"command"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notebook:render-all-markdown"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-20">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"keys"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb1-21">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alt M"</span></span>
<span id="cb1-22">            <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-23">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"selector"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".jp-Notebook:focus"</span></span>
<span id="cb1-24">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-25">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-26">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"args"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{},</span></span>
<span id="cb1-27">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"command"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notebook:paste-cell-above"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-28">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"keys"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb1-29">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shift V"</span></span>
<span id="cb1-30">            <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-31">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"selector"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".jp-Notebook:focus"</span></span>
<span id="cb1-32">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>Remember to add a trailing comma on the previous entry, and no comma after the final entry.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>With these new keyboard shortcuts, you can quickly run all the cells above your current selection, clear all cell outputs, render all markdown cells, and paste cells above your current selection. By customizing your shortcuts to fit your needs, you can save time and increase your productivity in Jupyter Lab.</p>


</section>

 ]]></description>
  <category>setup</category>
  <category>Jupyter</category>
  <guid>https://sam.ucm.dev/blog/posts/shortcuts/shortcuts.html</guid>
  <pubDate>Thu, 23 Feb 2023 13:00:00 GMT</pubDate>
</item>
<item>
  <title>Startup script for my Linux desktop</title>
  <link>https://sam.ucm.dev/blog/posts/startup/startup.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>This is my <code>startup.sh</code> script, to open various apps and webpages when I log in to my Linux PC, and arrange them on my workspaces.</p>
<p>Testing and debugging this script is a bit annoying. My previous approach was to make fixes to the script, close everything, exit my desktop session, then log in again and see what happens. Another possibility is to copy-paste lines out of the script into the terminal.</p>
<p>Now I’m going to try developing the script as a Jupyter notebook with the Bash kernel. I will also generate the shell script from the notebook.</p>
<p>I’ve included a couple of “appendices”, with lists of the tools and scripts I am using.</p>
</section>
<section id="workspaces-and-apps" class="level2">
<h2 class="anchored" data-anchor-id="workspaces-and-apps">Workspaces and Apps</h2>
<p>I use two monitors:</p>
<ol type="1">
<li>Left monitor, doesn’t switch workspaces, for apps that I want always to hand.</li>
<li>Right monitor, widescreen, does switch between workspaces, for work.</li>
</ol>
<p>Apps on left monitor:</p>
<ol type="1">
<li>Gnome Pomodoro - timer</li>
<li>Trello - tasks planner</li>
<li>ChatGPT - AI assistant</li>
<li>Miniflux - blog reader</li>
<li>Anki - learning with flashcards</li>
<li>Swatch - my system monitor script</li>
</ol>
<p>I am currently using these workspaces:</p>
<ol type="1">
<li>Entertainment
<ul>
<li>playing music</li>
<li>watching movies</li>
<li>xterm with GNU screen</li>
</ul></li>
<li>Chat and Social
<ul>
<li>Discord</li>
<li>Slack</li>
</ul></li>
<li>Miscellaneous
<ul>
<li>sysadmin</li>
<li>random stuff</li>
</ul></li>
<li>AI Study
<ul>
<li>Jupyter notebook</li>
<li>Quarto blog</li>
<li>xterm with GNU screen</li>
</ul></li>
</ol>
<p>I can add extra workspaces as needed when I work on other projects.</p>
</section>
<section id="the-startup-script" class="level2">
<h2 class="anchored" data-anchor-id="the-startup-script">The startup script</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># usage: source from ~/.xsessionrc</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set Right Alt to be the compose key, so I can type — em-dashes and such!</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">setxkbmap</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-option</span> compose:ralt</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gnome-dark</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connects</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> 0</span></code></pre></div>
</div>
<section id="common-apps-on-the-left-monitor" class="level3">
<h3 class="anchored" data-anchor-id="common-apps-on-the-left-monitor">Common apps on the left monitor</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">chrome_profile</span> Sam <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--new-window</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://trello.com/b/dnuAgKw1/ai"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://trello.com/b/y16reUe3/misc"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://chat.openai.com/chat"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gnome-pomodoro</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">barrier</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">anki</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb7-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">swatch</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flameshot &amp;</span></span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># miniflux &amp;</span></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># chatgpt &amp;</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sleep for a bit, and try to get out of the Activities Overview</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 5<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xdotool</span> key <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Super'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xdotool</span> key <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Escape'</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> Trello <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> 0,960,0,960,1080</span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> pomodoro <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> 0,0,0,400,400</span>
<span id="cb9-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> Barrier <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> 0,400,0,400,400</span>
<span id="cb9-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> Anki <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> 0,0,0,960,1080</span>
<span id="cb9-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xdotool</span> search <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> swatch windowmove 600 100</span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> app <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> Trello pomodoro Anki swatch Trello Miniflux<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span></span>
<span id="cb9-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$app</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> add,sticky</span>
<span id="cb9-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">done</span></span>
<span id="cb9-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> pomodoro <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> add,above</span>
<span id="cb9-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> swatch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> add,above</span>
<span id="cb9-12"></span>
<span id="cb9-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> app <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> barrier<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$app</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">done</span></span>
<span id="cb9-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> app <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> swatch pomodoro<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xdotool</span> search <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$app</span> windowminimize %@<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">done</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Opening in existing browser session.
libva error: vaGetDriverNameByIndex() failed with unknown libva error, driver_name = (null)
[1]+  Done                    chrome_profile Sam --new-window "https://trello.com/b/dnuAgKw1/ai" "https://trello.com/b/y16reUe3/misc" "https://chat.openai.com/chat" "https://chat.openai.com/chat" "https://miniflux.ucm.dev/unread" "https://www.youtube.com/playlist?list=PLqkzs79RU9yUrYAN083Jbiza9DMqQE1dq"</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gnome-pomodoro</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--start</span></span></code></pre></div>
</div>
</section>
<section id="apps-on-workspace-1-entertainment" class="level3">
<h3 class="anchored" data-anchor-id="apps-on-workspace-1-entertainment">Apps on Workspace 1: Entertainment</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">chrome</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--new-window</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://sigmoid.social/'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://www.facebook.com/'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://www.twitter.com/'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://www.linkedin.com/'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://www.reddit.com/'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://miniflux.ucm.dev/unread"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://news.ycombinator.com/best"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://chat.openai.com/chat"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb12-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 2</span>
<span id="cb12-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sigmoid Social"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> 0,1920,0,1720,1440</span>
<span id="cb12-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">chrome</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--new-window</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://www.youtube.com/playlist?list=PLqkzs79RU9yUrYAN083Jbiza9DMqQE1dq"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://www.netflix.com/browse'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://www.disneyplus.com/'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://primevideo.com/'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://www.youtube.com/'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb12-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 2</span>
<span id="cb12-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my music"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> 0,3640,0,1720,1440</span></code></pre></div>
</div>
</section>
<section id="apps-on-workspace-2-miscellaneous" class="level3">
<h3 class="anchored" data-anchor-id="apps-on-workspace-2-miscellaneous">Apps on Workspace 2: Miscellaneous</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 2</span>
<span id="cb13-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> 1</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">chrome_profile</span> Sam <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--new-window</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xtile</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xactivewindow</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span> /2 1 1</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 2</span>
<span id="cb15-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nautilus</span> ~/plan.dev <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> plan.dev <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> 0,3640,0,400,400</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sw</span> misc sh</span>
<span id="cb16-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xterm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stty -ixon; xtile /2+1 1 1 ; sxw misc sh ; exec </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$SHELL</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 2</span>
<span id="cb16-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sstuff</span> misc sh <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^L"</span></span></code></pre></div>
</div>
</section>
<section id="apps-on-workspace-3-chat-and-social" class="level3">
<h3 class="anchored" data-anchor-id="apps-on-workspace-3-chat-and-social">Apps on Workspace 3: Chat and Social</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 2</span>
<span id="cb17-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> 2</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">slack</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --startup &amp;</span></span>
<span id="cb18-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">discord</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --start-minimized &amp;</span></span>
<span id="cb18-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">chrome_profile</span> Sam <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--new-window</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xtile</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xactivewindow</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span> /2 1 1</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 5</span>
<span id="cb19-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> Slack <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> 0,1920,0,1720,1440</span>
<span id="cb19-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> Discord <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> 0,3640,0,1720,1440</span></code></pre></div>
</div>
</section>
<section id="apps-on-workspace-4-ai-study" class="level3">
<h3 class="anchored" data-anchor-id="apps-on-workspace-4-ai-study">Apps on Workspace 4: AI Study</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 2</span>
<span id="cb20-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> 3</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb21-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/ai</span>
<span id="cb21-2"></span>
<span id="cb21-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">zotero</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb21-4"></span>
<span id="cb21-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> ~/my/ai.env</span>
<span id="cb21-6"></span>
<span id="cb21-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xterm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stty -ixon; xtile /3+2 1 1 ; s ai ; exec </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$SHELL</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 2</span>
<span id="cb21-8"></span>
<span id="cb21-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sw</span> ai jup</span>
<span id="cb21-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sw</span> ai quarto</span>
<span id="cb21-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sw</span> ai sh</span>
<span id="cb21-12"></span>
<span id="cb21-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       xterm -e "stty -ixon; xtile /3+2 1 1 ; sxw ai sh ; exec $SHELL" &amp; sleep 2</span></span>
<span id="cb21-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sstuff</span> ai sh <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^L"</span></span>
<span id="cb21-15"></span>
<span id="cb21-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">chrome_profile</span> Sam <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--new-window</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb21-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://forums.fast.ai/c/part-2-2022/57"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb21-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://walkwithfastai.com/revisited/"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb21-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb21-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xtile</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xactivewindow</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span> 1 1 0</span>
<span id="cb21-21"></span>
<span id="cb21-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sst</span> ai jup jup <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 2 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xtile</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xactivewindow</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span> /3 1 1</span>
<span id="cb21-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sst</span> ai quarto quarto preview blog <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-browser</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--port</span> 4242</span>
<span id="cb21-24"></span>
<span id="cb21-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">chrome</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--new-window</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://localhost:4242"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xtile</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xactivewindow</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span> /3+1 1 1</span>
<span id="cb21-26"></span>
<span id="cb21-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">screen</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-S</span> ai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-X</span> shelltitle sh</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 2</span>
<span id="cb22-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xdotool</span> search <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> zotero windowminimize %@</span></code></pre></div>
</div>
</section>
</section>
<section id="exporting-the-shell-script" class="level2">
<h2 class="anchored" data-anchor-id="exporting-the-shell-script">Exporting the shell script</h2>
<p>I might put this in a separate script or tool later; as it is, I can run it from the notebook.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># __END__</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb24-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/ai/blog/posts/startup</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb25-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jupyter</span> nbconvert <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-prompt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--to</span> script startup.ipynb <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--stdout</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-2">--TemplateExporter.exclude_raw=True <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb25-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/^# __END__/q; p'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> startup.sh</span>
<span id="cb25-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> +x startup.sh</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[NbConvertApp] Converting notebook startup.ipynb to script</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mv</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> ./startup.sh ~/local/x/startup.sh</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>renamed './startup.sh' -&gt; '/home/sam/local/x/startup.sh'</code></pre>
</div>
</div>
</section>
<section id="logging-out-to-test-the-script" class="level2">
<h2 class="anchored" data-anchor-id="logging-out-to-test-the-script">Logging out to test the script</h2>
<p>This notebook can helpfully kill itself, an unusual characteristic for a notebook!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb29-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">close_all()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-2">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">wmctrl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 0.2<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">done</span></span>
<span id="cb29-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">close_all</span> Anki</span>
<span id="cb29-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">close_all</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Google Chrome'</span></span>
<span id="cb29-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 5</span>
<span id="cb29-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">killall</span> screen Xorg</span></code></pre></div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this blog post, I’ve shared my <code>startup.sh</code> script for my Linux desktop, which opens various apps and webpages when I log in and arranges them on my workspaces. I’ve also explained how I test and debug the script, and shown how I am developing it as a Jupyter notebook with the Bash kernel. By exporting the shell script from the notebook, I can easily run it whenever I need to. I hope that this script is useful as an example to others who want to automate their desktop environment and increase their productivity; or at least a little interesting.</p>
<p>I like this script in that helps me keep my workspaces organized right away when I log in. However, I spend too much time tweaking it, which can eat up valuable time that could be spent on actual work.</p>
<p>To be honest, I think it was fairly bonkers of me to go to this level of effort to set up my windows just so at startup. You probably shouldn’t imitate such bizarre nerdish behaviour!</p>
<p>Thanks for reading.</p>
</section>
<section id="appendix-1-tools-and-programs-that-i-use-here" class="level2">
<h2 class="anchored" data-anchor-id="appendix-1-tools-and-programs-that-i-use-here">Appendix 1: tools and programs that I use here</h2>
<ul>
<li><a href="https://jupyter.org/">Jupyter notebook</a> with the <a href="https://github.com/takluyver/bash_kernel">Bash kernel</a> for developing and testing my startup script</li>
<li><a href="https://www.gnu.org/software/bash/">Bash</a> shell scripting language</li>
<li><a href="https://www.gnome.org/">Gnome</a> desktop environment</li>
<li><a href="https://www.x.org/">Xorg</a> display server</li>
<li><a href="https://linux.die.net/man/1/setxkbmap">setxkbmap</a> allows to change the keyboard layout and options</li>
<li><a href="http://tripie.sweb.cz/utils/wmctrl/">wmctrl</a> for controlling windows on your desktop</li>
<li><a href="https://www.semicomplete.com/projects/xdotool/">xdotool</a> for simulating keyboard and mouse input, and controlling windows</li>
<li><a href="https://www.google.com/chrome/">Chrome</a> web browser</li>
<li><a href="https://trello.com/">Trello</a> for task planning</li>
<li><a href="https://github.com/tonyduan/ChatGPT">ChatGPT</a> for an AI assistant</li>
<li><a href="https://miniflux.app/">Miniflux</a> for a blog reader</li>
<li><a href="https://apps.ankiweb.net/">Anki</a> for learning with flashcards</li>
<li><a href="https://www.perl.org/">Perl</a> programming language for the xtile script</li>
<li><a href="https://www.gnu.org/software/screen/">Screen</a> for creating and managing terminal sessions</li>
<li><a href="https://slack.com/">Slack</a> for team communication</li>
<li><a href="https://discord.com/">Discord</a> for voice and text chat</li>
<li><a href="https://wiki.gnome.org/Apps/Nautilus">Nautilus</a> file manager</li>
<li><a href="https://www.zotero.org/">Zotero</a> for reference management</li>
<li><a href="https://gnomepomodoro.org/">Gnome Pomodoro</a> for timing my work and taking breaks</li>
<li><a href="https://en.wikipedia.org/wiki/Xterm">xterm</a> for a command line with a nice bitmap font (misc fixed 6x13)</li>
<li><a href="https://www.openssh.com/">ssh</a> for connecting to remote servers using the command-line interface.</li>
<li><a href="https://github.com/debauchee/barrier">Barrier</a> for sharing a keyboard and mouse across multiple computers as a software KVM switch.</li>
</ul>
</section>
<section id="appendix-2-scripts-that-i-wrote-and-used-here" class="level2">
<h2 class="anchored" data-anchor-id="appendix-2-scripts-that-i-wrote-and-used-here">Appendix 2: scripts that I wrote and used here</h2>
<ul>
<li><a href="https://ucm.dev/b/gnome-dark">gnome-dark</a>: A Bash script that sets the Gnome desktop environment to use the Adwaita-dark theme and a dark color scheme.</li>
<li><a href="https://ucm.dev/b/gnome-light">gnome-light</a>: A Bash script that sets the Gnome desktop environment to use the Adwaita theme and a light color scheme.</li>
<li><a href="https://ucm.dev/b/connects">connects</a>: A Bash script that connects to several remote hosts using the connect command and runs them in the background.</li>
<li><a href="https://ucm.dev/b/connect">connect</a>: A Bash script that uses ssh to connect to remote servers specified as command-line arguments, with some connection options set.</li>
<li><a href="https://ucm.dev/b/chrome_profile">chrome_profile</a>: A Bash script that launches Google Chrome with a specific profile.</li>
<li><a href="https://ucm.dev/b/chrome_profile_key">chrome_profile_key</a>: A Bash script that returns the key for a specific Chrome profile.</li>
<li><a href="https://ucm.dev/b/chrome_profiles_list">chrome_profiles_list</a>: A Bash script that lists all Chrome profiles and their keys.</li>
<li><a href="https://ucm.dev/b/swatch">swatch</a>: A Bash script that launches a terminal window and displays system information using the watch command and other tools.</li>
<li><a href="https://ucm.dev/t/bin.x11/xtile">xtile</a>: A Perl script that tiles a window on a specific screen, with options for the window size and position.</li>
<li><a href="https://ucm.dev/t/bin.screen/s">s</a>: A Bash script that launches the screen command with some default options, and any additional arguments.</li>
<li><a href="https://ucm.dev/t/bin.screen/sw">sw</a>: A Bash script that creates a new screen and window, with an optional directory.</li>
<li><a href="https://ucm.dev/t/bin.screen/sxw">sxw</a>: A Bash script that attaches to a specific screen window using the screen command.</li>
<li><a href="https://ucm.dev/t/bin.screen/sstuff">sstuff</a>: A Bash script that sends keystrokes to a specific screen window using the screen command.</li>
</ul>


</section>

 ]]></description>
  <category>bad</category>
  <category>setup</category>
  <category>Debian</category>
  <category>tools</category>
  <guid>https://sam.ucm.dev/blog/posts/startup/startup.html</guid>
  <pubDate>Thu, 23 Feb 2023 13:00:00 GMT</pubDate>
</item>
<item>
  <title>Blogging AI with Jupyter and Quarto</title>
  <link>https://sam.ucm.dev/blog/posts/blog/blog.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Welcome to my blog! My name is <a href="https://sam.ucm.dev/">Sam Watkins</a>, and I am a programmer and math enthusiast with a keen interest in artificial intelligence. As part of my journey to learn more about AI, I am starting this blog to document my studies, particularly with the <a href="https://fast.ai">fast.ai</a> book and courses.</p>
<p>In this first post, I will provide an overview of why I am starting this blog and share some details on how I plan to use Jupyter, Quarto, and nbdev2 tools to create software libraries, documentation, apps, and blog posts. I believe that blogging will not only help me solidify my understanding of AI but also provide a platform to share my insights and get feedback from others in the community. Blogging can be a powerful tool for learning, networking, and personal development.</p>
<p>I want to note from the beginning, that I am using ChatGPT to help me write better blog posts; but I’m doing most of the work!</p>
</section>
<section id="why-write-a-blog" class="level2">
<h2 class="anchored" data-anchor-id="why-write-a-blog">Why write a blog?</h2>
<p>In a previous post on dev.to, I discussed the benefits of keeping a development log. Writing about my progress helps me learn more effectively, and the feedback I receive can be invaluable. I’ve also learned from the success of other developers, like the creator of the game <a href="https://www.pentadact.com/category/making-games/gunpoint/?orderby=date&amp;order=ASC">Gunpoint</a>, who grew a community around his blog and received feedback at every step of his project.</p>
<p>I hope that by starting this blog, I can experience some of the benefits of blogging for myself and maybe help others in the process. Please leave a comment using the <a href="https://hypothes.is/">hypothes.is</a> plugin on the right side, if you have any thoughts on the topic or suggestions for me as I begin this journey.</p>
<details>
<summary>
See also
</summary>
<ul>
<li>This previous post of mine on dev.to: <a href="https://dev.to/gamedev/why-write-a-dev-log-27nh">Why Write a Dev Log?</a></li>
<li>Rachael Thomas’s post: <a href="https://www.fast.ai/posts/2017-04-06-alternatives.html#why-you-yes-you-should-blog">Why you (yes, you) should blog</a></li>
<li>Another post from Rachael: <a href="https://www.fast.ai/posts/2019-05-13-blogging-advice.html">Advice for Better Blog Posts</a></li>
<li>An exemplary dev log: <a href="https://www.pentadact.com/category/making-games/gunpoint/?orderby=date&amp;order=ASC">Gunpoint dev log</a></li>
<li>An exemplary dev retrospective: <a href="https://www.pentadact.com/2013-10-15-gunpoint-development-breakdown/">Gunpoint dev breakdown</a></li>
</ul>
</details>
</section>
<section id="why-use-jupyter-and-quarto" class="level2">
<h2 class="anchored" data-anchor-id="why-use-jupyter-and-quarto">Why use Jupyter and Quarto?</h2>
<p>The <a href="https://fast.ai">fast.ai</a> team recommends to work in <a href="https://jupyter.org/">Jupyter</a> and blog using <a href="https://quarto.org/">Quarto</a>. Their <a href="https://nbdev.fast.ai/">nbdev2</a> tool also makes use of Quarto. We can work on a notebooks in Jupyter, then run them through nbdev2 and Quarto to produce software libraries, documentation, apps, blog posts, papers, and even books.</p>
<details>
<summary>
See also
</summary>
<ul>
<li><a href="https://www.fast.ai/">fast.ai</a>: A company that provides practical deep learning courses and libraries, as well as open source software tools for building and deploying deep learning models.</li>
<li><a href="https://www.fast.ai/posts/2022-07-28-nbdev2.html">nbdev+Quarto: A new secret weapon for productivity</a>: The blog post recommending to use Jupyter with nbdev and Quarto.</li>
<li><a href="https://jupyter.org/">Jupyter</a>: A web-based interactive development environment for creating notebooks, code, and data visualizations. Supports multiple programming languages.</li>
<li><a href="https://quarto.org/">Quarto</a>: A document automation tool that can be used for creating books, reports, and blogs using Markdown, Jupyter Notebooks, and other file formats.</li>
<li><a href="https://nbdev.fast.ai/">nbdev</a>: A tool that helps you develop Python packages using Jupyter Notebooks.</li>
</ul>
</details>
</section>
<section id="installing-the-software" class="level2">
<h2 class="anchored" data-anchor-id="installing-the-software">Installing the software</h2>
<p>I am running the AI tools on my home PC, with Debian GNU/Linux and an NVIDIA GPU. I’ll write more about my setup in another post.</p>
<p>I downloaded Quarto from their <a href="https://quarto.org/docs/get-started/">Get Started</a> page, and installed it.</p>
<p>To manage the installation of Python packages, I’m using pip, which is a package installer for Python. It’s a command-line utility that helps you install and manage software packages written in Python. You can learn more about pip and its usage from the <a href="https://pip.pypa.io/en/stable/">official pip documentation</a>.</p>
<p>This command installs or upgrades Jupyter, fastbook, and nbdev Python packages, which I’ll need to use for AI experiments and to help me write my blog.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> jupyter fastbook nbdev</span></code></pre></div>
</div>
</section>
<section id="setting-up-the-blog" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-blog">Setting up the blog</h2>
<p>To set up the blog, I first created a Git repository called <code>ai</code> in my home directory. I used the following commands to create the blog project.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> ai</span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ai</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> init</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Reinitialized existing Git repository in /home/sam/ai/.git/</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> create-project blog <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span> website:blog</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Creating project at /home/sam/ai/blog:
  - Created _quarto.yml
  - Created .gitignore
  - Created index.qmd
  - Created posts/welcome/index.qmd
  - Created posts/post-with-code/index.qmd
  - Created about.qmd
  - Created styles.css
  - Created posts/_metadata.yml</code></pre>
</div>
</div>
<p>I also ran the command <code>nbdev_install_hooks</code> to prevent unnecessary Git merge conflicts and enable conflict resolution in Jupyter.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nbdev_install_hooks</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Hooks are installed.</code></pre>
</div>
</div>
<details>
<summary>
See also
</summary>
<ul>
<li><a href="https://quarto.org/docs/websites/website-blog.html">Quarto - Creating a Blog</a></li>
<li><a href="https://www.fast.ai/posts/2022-08-25-jupyter-git.html">The Jupyter+git problem is now solved</a></li>
<li><a href="https://nbdev.fast.ai/tutorials/git_friendly_jupyter.html">Git-Friendly Jupyter</a></li>
<li><a href="https://git-scm.com/docs">Git documentation</a></li>
<li><a href="https://guides.github.com/introduction/git-handbook/">Git Handbook</a></li>
<li><a href="https://www.codecademy.com/learn/learn-git">Codecademy’s “Learn Git” course</a></li>
<li><a href="http://tldp.org/LDP/Bash-Beginners-Guide/html/">Bash Guide for Beginners</a></li>
</ul>
</details>
</section>
<section id="adding-this-post-to-the-blog" class="level2">
<h2 class="anchored" data-anchor-id="adding-this-post-to-the-blog">Adding this post to the blog</h2>
<p>I had already started writing this post in a Jupyter Lab notebook <code>blogging.ipynb</code>. Now I needed to put it in the right place, so I made a directory for it:</p>
<p>I started writing this post in a Jupyter Lab notebook called <code>blogging.ipynb</code>. When I got to this point, I needed to put it in the right directory to include it in the blog. I first created a directory called <code>blog/posts/blogging</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> blog/posts/blogging</span></code></pre></div>
</div>
<p>Then I simply moved the <code>blogging.ipynb</code> file to that directory using Jupyter Lab’s file browser. This allowed me to easily include the post in the blog without even having to close the notebook.</p>
</section>
<section id="previewing-the-blog" class="level2">
<h2 class="anchored" data-anchor-id="previewing-the-blog">Previewing the blog</h2>
<p>Once you’ve set up your blog, you can preview it by running the following command in a terminal:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> preview blog</span></code></pre></div>
<p>Make sure to run this command outside of Jupyter, as it can cause Jupyter to hang if run in a cell.</p>
<p>You can also use additional options to customize the preview. For example, if you don’t want to launch a browser, you can use the –no-browser option. If you want to specify a custom port, you can use the –port option followed by the desired port number. Here’s an example of how to use both options:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> preview blog <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-browser</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--port</span> 4242</span></code></pre></div>
<p>This will start the preview on port 4242 and prevent it from automatically launching a browser. I do it this way myself, because I open the preview window from a separate startup script.</p>
</section>
<section id="finishing-up" class="level2">
<h2 class="anchored" data-anchor-id="finishing-up">Finishing up</h2>
<p>To clean up the blog ready for publishing my first post, I removed the example posts, changed the settings, filled in the about page, added links to my social media profiles, and added a profile picture.</p>
<p>I also followed the Quarto documentation to enable comments using Hypothesis and an RSS feed for the blog.</p>
<p>The Hypothesis annotation tool to allow readers to leave comments and annotations on the blog posts. This feature required me to create an Hypothesis account and link it to the blog. It’s functional, but looks and feels different from regular commenting. Please try it out and leave a comment for me.</p>
<p>For the RSS feed, I followed the Quarto guide to add an RSS feed to the blog. This enables readers to subscribe to the blog and receive updates whenever new posts are published. Personally I am using the Miniflux RSS reader; Newsblur is another good option. After a bit of research, I found that I can follow the comments on my blog using <a href="https://hypothes.is/stream.rss?wildcard_uri=https://sam.ucm.dev/*">this RSS stream</a>.</p>
<details>
<summary>
See also
</summary>
<ul>
<li><a href="https://quarto.org/docs/output-formats/html-basics.html#commenting">Quarto - HTML Basics - Commenting</a></li>
<li><a href="https://quarto.org/docs/websites/website-blog.html#rss-feed">Quarto - Creating a Blog - RSS Feed</a></li>
<li><a href="https://web.hypothes.is/">Hypothesis</a>: A web-based annotation tool that allows users to highlight and comment on web pages.</li>
<li><a href="https://en.wikipedia.org/wiki/RSS">RSS</a>: A web feed format used to publish frequently updated content such as blog entries, news headlines, and podcasts.</li>
<li><a href="https://miniflux.app/">Miniflux</a>: A minimalist and open source RSS reader.</li>
<li><a href="https://www.newsblur.com/">NewsBlur</a>: A personal news reader that brings people together to talk about the world.</li>
</ul>
</details>
</section>
<section id="committing-to-git" class="level2">
<h2 class="anchored" data-anchor-id="committing-to-git">Committing to git</h2>
<p>The Quarto doc says “you should always fully <code>quarto render</code> your site before deploying it”, so let’s do it, and commit to git:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/ai</span>
<span id="cb11-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> render blog</span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add blog</span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'update blog'</span></span>
<span id="cb11-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span>
<span id="cb11-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push opal</span>
<span id="cb11-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push pi</span></code></pre></div>
</div>
<p>I pushed to github, and my two servers <em>opal</em> and <em>pi</em>.</p>
<details>
<summary>
See also
</summary>
<ul>
<li><a href="https://quarto.org/docs/websites/">Quarto - Websites</a></li>
<li><a href="https://github.com/">GitHub</a></li>
</ul>
</details>
</section>
<section id="publishing-the-blog" class="level2">
<h2 class="anchored" data-anchor-id="publishing-the-blog">Publishing the blog</h2>
<p>I used a symlink on my server to put the rendered blog into my website at <a href="https://sam.ucm.dev/blog">sam.ucm.dev/blog</a>:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ln</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> ~/ai/blog/_site ~/www/sam.ucm.dev/blog</span></code></pre></div>
<details>
<summary>
See also
</summary>
<ul>
<li><a href="https://quarto.org/docs/publishing/">Quarto - Publishing</a></li>
</ul>
</details>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this post, we’ve seen how to set up a blog using Quarto and Jupyter. These tools allow us to write and publish blog posts as Jupyter notebooks, which can be converted to various formats such as HTML, PDF, and LaTeX, among others. We’ve also looked at using Hypothesis for comments and annotations, and how to commit our changes to git and deploy our blog on a personal server. By following these steps, we can create a blog that showcases our AI studies and provides a platform for getting feedback, sharing knowledge, and building a community.</p>
<p>One thing I would like to explore further, is a way that I can automatically link to other AI bloggers in the community. Link sharing and discovery is one of the benefits of posting on an off-the-shelf playform, such as <em>Towards Data Science</em>; it would be good to have something similar for indie bloggers. Maybe just an RSS aggregator plugin that would show links to other recent posts from selected friends and communities…</p>
<p>If you have any questions or suggestions, please leave a comment, if you can figure out how to use Hypothesis. Thanks for reading!</p>


</section>

 ]]></description>
  <category>setup</category>
  <category>blog</category>
  <category>Jupyter</category>
  <category>Quarto</category>
  <guid>https://sam.ucm.dev/blog/posts/blog/blog.html</guid>
  <pubDate>Tue, 07 Feb 2023 13:00:00 GMT</pubDate>
</item>
</channel>
</rss>
